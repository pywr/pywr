Search.setIndex({"alltitles": {"A minimal example": [[157, "a-minimal-example"]], "A simple parameter": [[149, "a-simple-parameter"]], "Activation function parameters": [[137, "activation-function-parameters"]], "Additional information": [[141, "additional-information"]], "Aggregated nodes": [[141, null]], "Aggregated parameters": [[142, null]], "Annual profile parameters": [[137, "annual-profile-parameters"]], "Any and All": [[142, "any-and-all"]], "Array based parameters": [[137, "array-based-parameters"]], "Base Parameter class": [[137, "base-parameter-class"]], "Base Recorder classes": [[138, "base-recorder-classes"]], "Basic concept": [[143, "basic-concept"]], "Basic usage": [[142, "basic-usage"]], "Bisection Search (pywr.utils.bisect)": [[140, "module-pywr.utils.bisect"]], "Checksums": [[145, "checksums"]], "Citation": [[156, "citation"]], "Combining multiple parameters": [[137, "combining-multiple-parameters"]], "Constants": [[145, "constants"]], "Constraining flow using a maximum value": [[141, "constraining-flow-using-a-maximum-value"]], "Constraining flow using a ratio": [[141, "constraining-flow-using-a-ratio"]], "Continuous Integration": [[154, "continuous-integration"]], "Control curve parameters": [[137, "control-curve-parameters"]], "Core classes": [[133, null]], "Custom aggregation functions": [[142, "custom-aggregation-functions"]], "Custom control curves": [[143, "custom-control-curves"]], "Dataframe parameter": [[137, "dataframe-parameter"]], "Debugging and syntax errors": [[155, "debugging-and-syntax-errors"]], "Deficit recorders": [[138, "deficit-recorders"]], "Demand restrictions": [[146, null]], "Dependencies": [[154, "dependencies"]], "Dependency on other parameters": [[149, "dependency-on-other-parameters"]], "Development and testing": [[154, "development-and-testing"]], "Documentation": [[156, "documentation"]], "Dynamic behaviour and control curves": [[143, null]], "Edges": [[155, "edges"]], "Examples": [[145, "examples"]], "Extending Pywr": [[151, null]], "Extending Pywr with custom Nodes": [[148, null]], "Extending Pywr with custom Parameters": [[149, null]], "Extending Pywr with custom Recorders": [[150, null]], "File recorders": [[138, "file-recorders"]], "Flow duration curve recorders": [[138, "flow-duration-curve-recorders"]], "Footnotes": [[155, "footnotes"]], "GLPK error handling and performance": [[147, null]], "HDF5 Parameter": [[137, "hdf5-parameter"]], "Hydro-power recorders": [[138, "hydro-power-recorders"]], "Hydropower parameters": [[137, "hydropower-parameters"]], "Improving performance with Cython": [[149, "improving-performance-with-cython"]], "Index recorders": [[138, "index-recorders"]], "Installing (in general)": [[154, "installing-in-general"]], "Installing Pywr": [[154, null]], "Installing binary packages with Anaconda": [[154, "installing-binary-packages-with-anaconda"]], "Installing binary wheels with pip": [[154, "installing-binary-wheels-with-pip"]], "Installing from source with Anaconda": [[154, "installing-from-source-with-anaconda"]], "Installing on Linux": [[154, "installing-on-linux"]], "Installing on OS X": [[154, "installing-on-os-x"]], "Installing on Windows": [[154, "installing-on-windows"]], "Interpolation parameters": [[137, "interpolation-parameters"]], "JSON model format": [[155, null]], "License": [[156, null]], "Loading a JSON document": [[155, "loading-a-json-document"]], "MaxParameter, MinParameter and NegativeParameter, NegativeMaxParameter": [[142, "maxparameter-minparameter-and-negativeparameter-negativemaxparameter"]], "Mean and Median": [[142, "mean-and-median"]], "Metadata": [[155, "metadata"]], "Module contents": [[136, "module-pywr.optimisation"], [139, "module-pywr.solvers"]], "Monthly profiles": [[145, "monthly-profiles"]], "Multi-index": [[145, "multi-index"]], "Multi-model coupling parameters": [[137, "multi-model-coupling-parameters"]], "Nodes": [[134, null], [155, "nodes"]], "Nodes classes": [[134, "nodes-classes"]], "Non-storage nodes": [[155, "non-storage-nodes"]], "Notebook Utilities": [[135, null]], "Numpy array recorders": [[138, "numpy-array-recorders"]], "Older versions": [[147, "older-versions"]], "Optimisation": [[136, null]], "Other control curves": [[143, "other-control-curves"]], "Other parameters": [[137, "other-parameters"]], "Overview of document structure": [[155, "overview-of-document-structure"]], "Parameters": [[137, null], [155, "parameters"]], "Platypus (pywr.optimisation.platypus)": [[136, "platypus-pywr-optimisation-platypus"]], "Problem formulation": [[152, null]], "Pygmo (pywr.optimisation.pygmo)": [[136, "module-pywr.optimisation.pygmo"]], "Pywr cookbook examples": [[144, null]], "Pywr reference documentation.": [[132, null]], "Recorders": [[138, null]], "Simple parameters": [[137, "simple-parameters"]], "Software": [[156, "software"]], "Solver": [[155, "solver"]], "Solvers": [[139, null]], "Statistical recorders": [[138, "statistical-recorders"]], "Storage dependent control curves": [[143, "storage-dependent-control-curves"]], "Storage nodes": [[155, "storage-nodes"]], "Submodules": [[136, "submodules"], [139, "submodules"]], "Sum, Min, Max, Product": [[142, "sum-min-max-product"]], "Supported formats": [[145, "supported-formats"]], "Tables": [[145, "tables"]], "Threshold parameters": [[137, "threshold-parameters"]], "Timeseries": [[145, "timeseries"]], "Timestepper": [[155, "timestepper"]], "Timesteps and scenarios": [[149, "timesteps-and-scenarios"]], "Tracking state with setup, reset, before and after": [[149, "tracking-state-with-setup-reset-before-and-after"]], "Tutorial": [[157, null]], "Ubuntu": [[154, "ubuntu"]], "Using external data": [[145, null]], "Utilities": [[140, null]], "Version 1.17 and above": [[147, "version-1-17-and-above"]], "Welcome to Pywr\u2019s documentation!": [[153, null]], "demands.csv": [[145, "id2"]], "demands_monthly.csv": [[145, "id3"]], "multiindex_data.csv": [[145, "id4"]], "pywr.core.Scenario": [[0, null]], "pywr.core.ScenarioCollection": [[1, null]], "pywr.core.ScenarioIndex": [[2, null]], "pywr.core.Timestep": [[3, null]], "pywr.domains.river.Catchment": [[4, null]], "pywr.domains.river.Reservoir": [[5, null]], "pywr.domains.river.River": [[6, null]], "pywr.domains.river.RiverGauge": [[7, null]], "pywr.domains.river.RiverSplit": [[8, null]], "pywr.domains.river.RiverSplitWithGauge": [[9, null]], "pywr.nodes.AggregatedNode": [[10, null]], "pywr.nodes.AggregatedStorage": [[11, null]], "pywr.nodes.AnnualVirtualStorage": [[12, null]], "pywr.nodes.BreakLink": [[13, null]], "pywr.nodes.DelayNode": [[14, null]], "pywr.nodes.Input": [[15, null]], "pywr.nodes.Link": [[16, null]], "pywr.nodes.LossLink": [[17, null]], "pywr.nodes.MonthlyVirtualStorage": [[18, null]], "pywr.nodes.MultiSplitLink": [[19, null]], "pywr.nodes.Node": [[20, null]], "pywr.nodes.Output": [[21, null]], "pywr.nodes.PiecewiseLink": [[22, null]], "pywr.nodes.RollingVirtualStorage": [[23, null]], "pywr.nodes.SeasonalVirtualStorage": [[24, null]], "pywr.nodes.Storage": [[25, null]], "pywr.nodes.VirtualStorage": [[26, null]], "pywr.parameters.AbstractThresholdParameter": [[27, null]], "pywr.parameters.AggregatedIndexParameter": [[28, null]], "pywr.parameters.AggregatedParameter": [[29, null]], "pywr.parameters.AnnualHarmonicSeriesParameter": [[30, null]], "pywr.parameters.ArrayIndexedParameter": [[31, null]], "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter": [[32, null]], "pywr.parameters.ArrayIndexedScenarioParameter": [[33, null]], "pywr.parameters.BinaryStepParameter": [[34, null]], "pywr.parameters.ConstantParameter": [[35, null]], "pywr.parameters.ConstantScenarioIndexParameter": [[36, null]], "pywr.parameters.ConstantScenarioParameter": [[37, null]], "pywr.parameters.CurrentOrdinalDayThresholdParameter": [[38, null]], "pywr.parameters.CurrentYearThresholdParameter": [[39, null]], "pywr.parameters.DailyProfileParameter": [[40, null]], "pywr.parameters.DataFrameParameter": [[41, null]], "pywr.parameters.DeficitParameter": [[42, null]], "pywr.parameters.DiscountFactorParameter": [[43, null]], "pywr.parameters.DivisionParameter": [[44, null]], "pywr.parameters.FlowDelayParameter": [[45, null]], "pywr.parameters.FlowParameter": [[46, null]], "pywr.parameters.HydropowerTargetParameter": [[47, null]], "pywr.parameters.IndexParameter": [[48, null]], "pywr.parameters.IndexedArrayParameter": [[49, null]], "pywr.parameters.InterpolatedFlowParameter": [[50, null]], "pywr.parameters.InterpolatedParameter": [[51, null]], "pywr.parameters.InterpolatedQuadratureParameter": [[52, null]], "pywr.parameters.InterpolatedVolumeParameter": [[53, null]], "pywr.parameters.LogisticParameter": [[54, null]], "pywr.parameters.MaxParameter": [[55, null]], "pywr.parameters.MinParameter": [[56, null]], "pywr.parameters.MonthlyProfileParameter": [[57, null]], "pywr.parameters.MultipleThresholdIndexParameter": [[58, null]], "pywr.parameters.MultipleThresholdParameterIndexParameter": [[59, null]], "pywr.parameters.NegativeMaxParameter": [[60, null]], "pywr.parameters.NegativeMinParameter": [[61, null]], "pywr.parameters.NegativeParameter": [[62, null]], "pywr.parameters.NodeThresholdParameter": [[63, null]], "pywr.parameters.OffsetParameter": [[64, null]], "pywr.parameters.OtherModelIndexParameterValueIndexParameter": [[65, null]], "pywr.parameters.OtherModelNodeFlowParameter": [[66, null]], "pywr.parameters.OtherModelNodeStorageParameter": [[67, null]], "pywr.parameters.OtherModelParameterValueParameter": [[68, null]], "pywr.parameters.Parameter": [[69, null]], "pywr.parameters.ParameterThresholdParameter": [[70, null]], "pywr.parameters.PiecewiseIntegralParameter": [[71, null]], "pywr.parameters.RbfProfileParameter": [[72, null]], "pywr.parameters.RecorderThresholdParameter": [[73, null]], "pywr.parameters.RectifierParameter": [[74, null]], "pywr.parameters.RollingMeanFlowNodeParameter": [[75, null]], "pywr.parameters.ScenarioDailyProfileParameter": [[76, null]], "pywr.parameters.ScenarioMonthlyProfileParameter": [[77, null]], "pywr.parameters.ScenarioWeeklyProfileParameter": [[78, null]], "pywr.parameters.ScenarioWrapperParameter": [[79, null]], "pywr.parameters.StorageParameter": [[80, null]], "pywr.parameters.StorageThresholdParameter": [[81, null]], "pywr.parameters.TablesArrayParameter": [[82, null]], "pywr.parameters.UniformDrawdownProfileParameter": [[83, null]], "pywr.parameters.WeeklyProfileParameter": [[84, null]], "pywr.parameters.WeightedAverageProfileParameter": [[85, null]], "pywr.parameters.control_curves.BaseControlCurveParameter": [[86, null]], "pywr.parameters.control_curves.ControlCurveIndexParameter": [[87, null]], "pywr.parameters.control_curves.ControlCurveInterpolatedParameter": [[88, null]], "pywr.parameters.control_curves.ControlCurveParameter": [[89, null]], "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter": [[90, null]], "pywr.recorders.AggregatedRecorder": [[91, null]], "pywr.recorders.Aggregator": [[92, null]], "pywr.recorders.AnnualCountIndexParameterRecorder": [[93, null]], "pywr.recorders.AnnualCountIndexThresholdRecorder": [[94, null]], "pywr.recorders.AnnualTotalFlowRecorder": [[95, null]], "pywr.recorders.CSVRecorder": [[96, null]], "pywr.recorders.DeficitFrequencyNodeRecorder": [[97, null]], "pywr.recorders.FlowDurationCurveDeviationRecorder": [[98, null]], "pywr.recorders.FlowDurationCurveRecorder": [[99, null]], "pywr.recorders.GaussianKDEStorageRecorder": [[100, null]], "pywr.recorders.HydropowerRecorder": [[101, null]], "pywr.recorders.IndexParameterRecorder": [[102, null]], "pywr.recorders.MeanFlowNodeRecorder": [[103, null]], "pywr.recorders.MeanParameterRecorder": [[104, null]], "pywr.recorders.MinimumThresholdVolumeStorageRecorder": [[105, null]], "pywr.recorders.MinimumVolumeStorageRecorder": [[106, null]], "pywr.recorders.NodeRecorder": [[107, null]], "pywr.recorders.NormalisedGaussianKDEStorageRecorder": [[108, null]], "pywr.recorders.NumpyArrayAreaRecorder": [[109, null]], "pywr.recorders.NumpyArrayDailyProfileParameterRecorder": [[110, null]], "pywr.recorders.NumpyArrayIndexParameterRecorder": [[111, null]], "pywr.recorders.NumpyArrayLevelRecorder": [[112, null]], "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder": [[113, null]], "pywr.recorders.NumpyArrayNodeDeficitRecorder": [[114, null]], "pywr.recorders.NumpyArrayNodeRecorder": [[115, null]], "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder": [[116, null]], "pywr.recorders.NumpyArrayParameterRecorder": [[117, null]], "pywr.recorders.NumpyArrayStorageRecorder": [[118, null]], "pywr.recorders.ParameterRecorder": [[119, null]], "pywr.recorders.Recorder": [[120, null]], "pywr.recorders.RollingMeanFlowNodeRecorder": [[121, null]], "pywr.recorders.RollingWindowParameterRecorder": [[122, null]], "pywr.recorders.SeasonalFlowDurationCurveRecorder": [[123, null]], "pywr.recorders.StorageDurationCurveRecorder": [[124, null]], "pywr.recorders.StorageRecorder": [[125, null]], "pywr.recorders.TablesRecorder": [[126, null]], "pywr.recorders.TimestepCountIndexParameterRecorder": [[127, null]], "pywr.recorders.TotalDeficitNodeRecorder": [[128, null]], "pywr.recorders.TotalFlowNodeRecorder": [[129, null]], "pywr.recorders.TotalHydroEnergyRecorder": [[130, null]], "pywr.recorders.TotalParameterRecorder": [[131, null]], "pywr.solvers.cython_glpk module": [[139, "module-pywr.solvers.cython_glpk"]], "pywr.solvers.cython_lpsolve module": [[139, "pywr-solvers-cython-lpsolve-module"]], "timeseries1.csv": [[145, "id1"]]}, "docnames": ["api/generated/pywr.core.Scenario", "api/generated/pywr.core.ScenarioCollection", "api/generated/pywr.core.ScenarioIndex", "api/generated/pywr.core.Timestep", "api/generated/pywr.domains.river.Catchment", "api/generated/pywr.domains.river.Reservoir", "api/generated/pywr.domains.river.River", "api/generated/pywr.domains.river.RiverGauge", "api/generated/pywr.domains.river.RiverSplit", "api/generated/pywr.domains.river.RiverSplitWithGauge", "api/generated/pywr.nodes.AggregatedNode", "api/generated/pywr.nodes.AggregatedStorage", "api/generated/pywr.nodes.AnnualVirtualStorage", "api/generated/pywr.nodes.BreakLink", "api/generated/pywr.nodes.DelayNode", "api/generated/pywr.nodes.Input", "api/generated/pywr.nodes.Link", "api/generated/pywr.nodes.LossLink", "api/generated/pywr.nodes.MonthlyVirtualStorage", "api/generated/pywr.nodes.MultiSplitLink", "api/generated/pywr.nodes.Node", "api/generated/pywr.nodes.Output", "api/generated/pywr.nodes.PiecewiseLink", "api/generated/pywr.nodes.RollingVirtualStorage", "api/generated/pywr.nodes.SeasonalVirtualStorage", "api/generated/pywr.nodes.Storage", "api/generated/pywr.nodes.VirtualStorage", "api/generated/pywr.parameters.AbstractThresholdParameter", "api/generated/pywr.parameters.AggregatedIndexParameter", "api/generated/pywr.parameters.AggregatedParameter", "api/generated/pywr.parameters.AnnualHarmonicSeriesParameter", "api/generated/pywr.parameters.ArrayIndexedParameter", "api/generated/pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter", "api/generated/pywr.parameters.ArrayIndexedScenarioParameter", "api/generated/pywr.parameters.BinaryStepParameter", "api/generated/pywr.parameters.ConstantParameter", "api/generated/pywr.parameters.ConstantScenarioIndexParameter", "api/generated/pywr.parameters.ConstantScenarioParameter", "api/generated/pywr.parameters.CurrentOrdinalDayThresholdParameter", "api/generated/pywr.parameters.CurrentYearThresholdParameter", "api/generated/pywr.parameters.DailyProfileParameter", "api/generated/pywr.parameters.DataFrameParameter", "api/generated/pywr.parameters.DeficitParameter", "api/generated/pywr.parameters.DiscountFactorParameter", "api/generated/pywr.parameters.DivisionParameter", "api/generated/pywr.parameters.FlowDelayParameter", "api/generated/pywr.parameters.FlowParameter", "api/generated/pywr.parameters.HydropowerTargetParameter", "api/generated/pywr.parameters.IndexParameter", "api/generated/pywr.parameters.IndexedArrayParameter", "api/generated/pywr.parameters.InterpolatedFlowParameter", "api/generated/pywr.parameters.InterpolatedParameter", "api/generated/pywr.parameters.InterpolatedQuadratureParameter", "api/generated/pywr.parameters.InterpolatedVolumeParameter", "api/generated/pywr.parameters.LogisticParameter", "api/generated/pywr.parameters.MaxParameter", "api/generated/pywr.parameters.MinParameter", "api/generated/pywr.parameters.MonthlyProfileParameter", "api/generated/pywr.parameters.MultipleThresholdIndexParameter", "api/generated/pywr.parameters.MultipleThresholdParameterIndexParameter", "api/generated/pywr.parameters.NegativeMaxParameter", "api/generated/pywr.parameters.NegativeMinParameter", "api/generated/pywr.parameters.NegativeParameter", "api/generated/pywr.parameters.NodeThresholdParameter", "api/generated/pywr.parameters.OffsetParameter", "api/generated/pywr.parameters.OtherModelIndexParameterValueIndexParameter", "api/generated/pywr.parameters.OtherModelNodeFlowParameter", "api/generated/pywr.parameters.OtherModelNodeStorageParameter", "api/generated/pywr.parameters.OtherModelParameterValueParameter", "api/generated/pywr.parameters.Parameter", "api/generated/pywr.parameters.ParameterThresholdParameter", "api/generated/pywr.parameters.PiecewiseIntegralParameter", "api/generated/pywr.parameters.RbfProfileParameter", "api/generated/pywr.parameters.RecorderThresholdParameter", "api/generated/pywr.parameters.RectifierParameter", "api/generated/pywr.parameters.RollingMeanFlowNodeParameter", "api/generated/pywr.parameters.ScenarioDailyProfileParameter", "api/generated/pywr.parameters.ScenarioMonthlyProfileParameter", "api/generated/pywr.parameters.ScenarioWeeklyProfileParameter", "api/generated/pywr.parameters.ScenarioWrapperParameter", "api/generated/pywr.parameters.StorageParameter", "api/generated/pywr.parameters.StorageThresholdParameter", "api/generated/pywr.parameters.TablesArrayParameter", "api/generated/pywr.parameters.UniformDrawdownProfileParameter", "api/generated/pywr.parameters.WeeklyProfileParameter", "api/generated/pywr.parameters.WeightedAverageProfileParameter", "api/generated/pywr.parameters.control_curves.BaseControlCurveParameter", "api/generated/pywr.parameters.control_curves.ControlCurveIndexParameter", "api/generated/pywr.parameters.control_curves.ControlCurveInterpolatedParameter", "api/generated/pywr.parameters.control_curves.ControlCurveParameter", "api/generated/pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter", "api/generated/pywr.recorders.AggregatedRecorder", "api/generated/pywr.recorders.Aggregator", "api/generated/pywr.recorders.AnnualCountIndexParameterRecorder", "api/generated/pywr.recorders.AnnualCountIndexThresholdRecorder", "api/generated/pywr.recorders.AnnualTotalFlowRecorder", "api/generated/pywr.recorders.CSVRecorder", "api/generated/pywr.recorders.DeficitFrequencyNodeRecorder", "api/generated/pywr.recorders.FlowDurationCurveDeviationRecorder", "api/generated/pywr.recorders.FlowDurationCurveRecorder", "api/generated/pywr.recorders.GaussianKDEStorageRecorder", "api/generated/pywr.recorders.HydropowerRecorder", "api/generated/pywr.recorders.IndexParameterRecorder", "api/generated/pywr.recorders.MeanFlowNodeRecorder", "api/generated/pywr.recorders.MeanParameterRecorder", "api/generated/pywr.recorders.MinimumThresholdVolumeStorageRecorder", "api/generated/pywr.recorders.MinimumVolumeStorageRecorder", "api/generated/pywr.recorders.NodeRecorder", "api/generated/pywr.recorders.NormalisedGaussianKDEStorageRecorder", "api/generated/pywr.recorders.NumpyArrayAreaRecorder", "api/generated/pywr.recorders.NumpyArrayDailyProfileParameterRecorder", "api/generated/pywr.recorders.NumpyArrayIndexParameterRecorder", "api/generated/pywr.recorders.NumpyArrayLevelRecorder", "api/generated/pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder", "api/generated/pywr.recorders.NumpyArrayNodeDeficitRecorder", "api/generated/pywr.recorders.NumpyArrayNodeRecorder", "api/generated/pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder", "api/generated/pywr.recorders.NumpyArrayParameterRecorder", "api/generated/pywr.recorders.NumpyArrayStorageRecorder", "api/generated/pywr.recorders.ParameterRecorder", "api/generated/pywr.recorders.Recorder", "api/generated/pywr.recorders.RollingMeanFlowNodeRecorder", "api/generated/pywr.recorders.RollingWindowParameterRecorder", "api/generated/pywr.recorders.SeasonalFlowDurationCurveRecorder", "api/generated/pywr.recorders.StorageDurationCurveRecorder", "api/generated/pywr.recorders.StorageRecorder", "api/generated/pywr.recorders.TablesRecorder", "api/generated/pywr.recorders.TimestepCountIndexParameterRecorder", "api/generated/pywr.recorders.TotalDeficitNodeRecorder", "api/generated/pywr.recorders.TotalFlowNodeRecorder", "api/generated/pywr.recorders.TotalHydroEnergyRecorder", "api/generated/pywr.recorders.TotalParameterRecorder", "api/pywr", "api/pywr.core", "api/pywr.nodes", "api/pywr.notebook", "api/pywr.optimisation", "api/pywr.parameters", "api/pywr.recorders", "api/pywr.solvers", "api/pywr.utils", "cookbook/aggregated_node", "cookbook/aggregated_parameter", "cookbook/control_curves", "cookbook/cookbook", "cookbook/dataframes", "cookbook/demand_saving", "err_perf", "extending_pywr/extending_pywr_nodes", "extending_pywr/extending_pywr_parameters", "extending_pywr/extending_pywr_recorders", "extending_pywr/index", "formulation", "index", "install", "json", "license", "tutorial"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["api/generated/pywr.core.Scenario.rst", "api/generated/pywr.core.ScenarioCollection.rst", "api/generated/pywr.core.ScenarioIndex.rst", "api/generated/pywr.core.Timestep.rst", "api/generated/pywr.domains.river.Catchment.rst", "api/generated/pywr.domains.river.Reservoir.rst", "api/generated/pywr.domains.river.River.rst", "api/generated/pywr.domains.river.RiverGauge.rst", "api/generated/pywr.domains.river.RiverSplit.rst", "api/generated/pywr.domains.river.RiverSplitWithGauge.rst", "api/generated/pywr.nodes.AggregatedNode.rst", "api/generated/pywr.nodes.AggregatedStorage.rst", "api/generated/pywr.nodes.AnnualVirtualStorage.rst", "api/generated/pywr.nodes.BreakLink.rst", "api/generated/pywr.nodes.DelayNode.rst", "api/generated/pywr.nodes.Input.rst", "api/generated/pywr.nodes.Link.rst", "api/generated/pywr.nodes.LossLink.rst", "api/generated/pywr.nodes.MonthlyVirtualStorage.rst", "api/generated/pywr.nodes.MultiSplitLink.rst", "api/generated/pywr.nodes.Node.rst", "api/generated/pywr.nodes.Output.rst", "api/generated/pywr.nodes.PiecewiseLink.rst", "api/generated/pywr.nodes.RollingVirtualStorage.rst", "api/generated/pywr.nodes.SeasonalVirtualStorage.rst", "api/generated/pywr.nodes.Storage.rst", "api/generated/pywr.nodes.VirtualStorage.rst", "api/generated/pywr.parameters.AbstractThresholdParameter.rst", "api/generated/pywr.parameters.AggregatedIndexParameter.rst", "api/generated/pywr.parameters.AggregatedParameter.rst", "api/generated/pywr.parameters.AnnualHarmonicSeriesParameter.rst", "api/generated/pywr.parameters.ArrayIndexedParameter.rst", "api/generated/pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter.rst", "api/generated/pywr.parameters.ArrayIndexedScenarioParameter.rst", "api/generated/pywr.parameters.BinaryStepParameter.rst", "api/generated/pywr.parameters.ConstantParameter.rst", "api/generated/pywr.parameters.ConstantScenarioIndexParameter.rst", "api/generated/pywr.parameters.ConstantScenarioParameter.rst", "api/generated/pywr.parameters.CurrentOrdinalDayThresholdParameter.rst", "api/generated/pywr.parameters.CurrentYearThresholdParameter.rst", "api/generated/pywr.parameters.DailyProfileParameter.rst", "api/generated/pywr.parameters.DataFrameParameter.rst", "api/generated/pywr.parameters.DeficitParameter.rst", "api/generated/pywr.parameters.DiscountFactorParameter.rst", "api/generated/pywr.parameters.DivisionParameter.rst", "api/generated/pywr.parameters.FlowDelayParameter.rst", "api/generated/pywr.parameters.FlowParameter.rst", "api/generated/pywr.parameters.HydropowerTargetParameter.rst", "api/generated/pywr.parameters.IndexParameter.rst", "api/generated/pywr.parameters.IndexedArrayParameter.rst", "api/generated/pywr.parameters.InterpolatedFlowParameter.rst", "api/generated/pywr.parameters.InterpolatedParameter.rst", "api/generated/pywr.parameters.InterpolatedQuadratureParameter.rst", "api/generated/pywr.parameters.InterpolatedVolumeParameter.rst", "api/generated/pywr.parameters.LogisticParameter.rst", "api/generated/pywr.parameters.MaxParameter.rst", "api/generated/pywr.parameters.MinParameter.rst", "api/generated/pywr.parameters.MonthlyProfileParameter.rst", "api/generated/pywr.parameters.MultipleThresholdIndexParameter.rst", "api/generated/pywr.parameters.MultipleThresholdParameterIndexParameter.rst", "api/generated/pywr.parameters.NegativeMaxParameter.rst", "api/generated/pywr.parameters.NegativeMinParameter.rst", "api/generated/pywr.parameters.NegativeParameter.rst", "api/generated/pywr.parameters.NodeThresholdParameter.rst", "api/generated/pywr.parameters.OffsetParameter.rst", "api/generated/pywr.parameters.OtherModelIndexParameterValueIndexParameter.rst", "api/generated/pywr.parameters.OtherModelNodeFlowParameter.rst", "api/generated/pywr.parameters.OtherModelNodeStorageParameter.rst", "api/generated/pywr.parameters.OtherModelParameterValueParameter.rst", "api/generated/pywr.parameters.Parameter.rst", "api/generated/pywr.parameters.ParameterThresholdParameter.rst", "api/generated/pywr.parameters.PiecewiseIntegralParameter.rst", "api/generated/pywr.parameters.RbfProfileParameter.rst", "api/generated/pywr.parameters.RecorderThresholdParameter.rst", "api/generated/pywr.parameters.RectifierParameter.rst", "api/generated/pywr.parameters.RollingMeanFlowNodeParameter.rst", "api/generated/pywr.parameters.ScenarioDailyProfileParameter.rst", "api/generated/pywr.parameters.ScenarioMonthlyProfileParameter.rst", "api/generated/pywr.parameters.ScenarioWeeklyProfileParameter.rst", "api/generated/pywr.parameters.ScenarioWrapperParameter.rst", "api/generated/pywr.parameters.StorageParameter.rst", "api/generated/pywr.parameters.StorageThresholdParameter.rst", "api/generated/pywr.parameters.TablesArrayParameter.rst", "api/generated/pywr.parameters.UniformDrawdownProfileParameter.rst", "api/generated/pywr.parameters.WeeklyProfileParameter.rst", "api/generated/pywr.parameters.WeightedAverageProfileParameter.rst", "api/generated/pywr.parameters.control_curves.BaseControlCurveParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurveIndexParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurveInterpolatedParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurveParameter.rst", "api/generated/pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter.rst", "api/generated/pywr.recorders.AggregatedRecorder.rst", "api/generated/pywr.recorders.Aggregator.rst", "api/generated/pywr.recorders.AnnualCountIndexParameterRecorder.rst", "api/generated/pywr.recorders.AnnualCountIndexThresholdRecorder.rst", "api/generated/pywr.recorders.AnnualTotalFlowRecorder.rst", "api/generated/pywr.recorders.CSVRecorder.rst", "api/generated/pywr.recorders.DeficitFrequencyNodeRecorder.rst", "api/generated/pywr.recorders.FlowDurationCurveDeviationRecorder.rst", "api/generated/pywr.recorders.FlowDurationCurveRecorder.rst", "api/generated/pywr.recorders.GaussianKDEStorageRecorder.rst", "api/generated/pywr.recorders.HydropowerRecorder.rst", "api/generated/pywr.recorders.IndexParameterRecorder.rst", "api/generated/pywr.recorders.MeanFlowNodeRecorder.rst", "api/generated/pywr.recorders.MeanParameterRecorder.rst", "api/generated/pywr.recorders.MinimumThresholdVolumeStorageRecorder.rst", "api/generated/pywr.recorders.MinimumVolumeStorageRecorder.rst", "api/generated/pywr.recorders.NodeRecorder.rst", "api/generated/pywr.recorders.NormalisedGaussianKDEStorageRecorder.rst", "api/generated/pywr.recorders.NumpyArrayAreaRecorder.rst", "api/generated/pywr.recorders.NumpyArrayDailyProfileParameterRecorder.rst", "api/generated/pywr.recorders.NumpyArrayIndexParameterRecorder.rst", "api/generated/pywr.recorders.NumpyArrayLevelRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeDeficitRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeRecorder.rst", "api/generated/pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder.rst", "api/generated/pywr.recorders.NumpyArrayParameterRecorder.rst", "api/generated/pywr.recorders.NumpyArrayStorageRecorder.rst", "api/generated/pywr.recorders.ParameterRecorder.rst", "api/generated/pywr.recorders.Recorder.rst", "api/generated/pywr.recorders.RollingMeanFlowNodeRecorder.rst", "api/generated/pywr.recorders.RollingWindowParameterRecorder.rst", "api/generated/pywr.recorders.SeasonalFlowDurationCurveRecorder.rst", "api/generated/pywr.recorders.StorageDurationCurveRecorder.rst", "api/generated/pywr.recorders.StorageRecorder.rst", "api/generated/pywr.recorders.TablesRecorder.rst", "api/generated/pywr.recorders.TimestepCountIndexParameterRecorder.rst", "api/generated/pywr.recorders.TotalDeficitNodeRecorder.rst", "api/generated/pywr.recorders.TotalFlowNodeRecorder.rst", "api/generated/pywr.recorders.TotalHydroEnergyRecorder.rst", "api/generated/pywr.recorders.TotalParameterRecorder.rst", "api/pywr.rst", "api/pywr.core.rst", "api/pywr.nodes.rst", "api/pywr.notebook.rst", "api/pywr.optimisation.rst", "api/pywr.parameters.rst", "api/pywr.recorders.rst", "api/pywr.solvers.rst", "api/pywr.utils.rst", "cookbook/aggregated_node.rst", "cookbook/aggregated_parameter.rst", "cookbook/control_curves.rst", "cookbook/cookbook.rst", "cookbook/dataframes.rst", "cookbook/demand_saving.rst", "err_perf.rst", "extending_pywr/extending_pywr_nodes.rst", "extending_pywr/extending_pywr_parameters.rst", "extending_pywr/extending_pywr_recorders.rst", "extending_pywr/index.rst", "formulation.rst", "index.rst", "install.rst", "json.rst", "license.rst", "tutorial.rst"], "indexentries": {"__init__() (pywr.core.scenario method)": [[0, "pywr.core.Scenario.__init__", false]], "__init__() (pywr.core.scenariocollection method)": [[1, "pywr.core.ScenarioCollection.__init__", false]], "__init__() (pywr.core.scenarioindex method)": [[2, "pywr.core.ScenarioIndex.__init__", false]], "__init__() (pywr.core.timestep method)": [[3, "pywr.core.Timestep.__init__", false]], "__init__() (pywr.domains.river.catchment method)": [[4, "pywr.domains.river.Catchment.__init__", false]], "__init__() (pywr.domains.river.reservoir method)": [[5, "pywr.domains.river.Reservoir.__init__", false]], "__init__() (pywr.domains.river.river method)": [[6, "pywr.domains.river.River.__init__", false]], "__init__() (pywr.domains.river.rivergauge method)": [[7, "pywr.domains.river.RiverGauge.__init__", false]], "__init__() (pywr.domains.river.riversplit method)": [[8, "pywr.domains.river.RiverSplit.__init__", false]], "__init__() (pywr.domains.river.riversplitwithgauge method)": [[9, "pywr.domains.river.RiverSplitWithGauge.__init__", false]], "__init__() (pywr.nodes.aggregatednode method)": [[10, "pywr.nodes.AggregatedNode.__init__", false]], "__init__() (pywr.nodes.aggregatedstorage method)": [[11, "pywr.nodes.AggregatedStorage.__init__", false]], "__init__() (pywr.nodes.annualvirtualstorage method)": [[12, "pywr.nodes.AnnualVirtualStorage.__init__", false]], "__init__() (pywr.nodes.breaklink method)": [[13, "pywr.nodes.BreakLink.__init__", false]], "__init__() (pywr.nodes.delaynode method)": [[14, "pywr.nodes.DelayNode.__init__", false]], "__init__() (pywr.nodes.input method)": [[15, "pywr.nodes.Input.__init__", false]], "__init__() (pywr.nodes.link method)": [[16, "pywr.nodes.Link.__init__", false]], "__init__() (pywr.nodes.losslink method)": [[17, "pywr.nodes.LossLink.__init__", false]], "__init__() (pywr.nodes.monthlyvirtualstorage method)": [[18, "pywr.nodes.MonthlyVirtualStorage.__init__", false]], "__init__() (pywr.nodes.multisplitlink method)": [[19, "pywr.nodes.MultiSplitLink.__init__", false]], "__init__() (pywr.nodes.node method)": [[20, "pywr.nodes.Node.__init__", false]], "__init__() (pywr.nodes.output method)": [[21, "pywr.nodes.Output.__init__", false]], "__init__() (pywr.nodes.piecewiselink method)": [[22, "pywr.nodes.PiecewiseLink.__init__", false]], "__init__() (pywr.nodes.rollingvirtualstorage method)": [[23, "pywr.nodes.RollingVirtualStorage.__init__", false]], "__init__() (pywr.nodes.seasonalvirtualstorage method)": [[24, "pywr.nodes.SeasonalVirtualStorage.__init__", false]], "__init__() (pywr.nodes.storage method)": [[25, "pywr.nodes.Storage.__init__", false]], "__init__() (pywr.nodes.virtualstorage method)": [[26, "pywr.nodes.VirtualStorage.__init__", false]], "__init__() (pywr.parameters.abstractthresholdparameter method)": [[27, "pywr.parameters.AbstractThresholdParameter.__init__", false]], "__init__() (pywr.parameters.aggregatedindexparameter method)": [[28, "pywr.parameters.AggregatedIndexParameter.__init__", false]], "__init__() (pywr.parameters.aggregatedparameter method)": [[29, "pywr.parameters.AggregatedParameter.__init__", false]], "__init__() (pywr.parameters.annualharmonicseriesparameter method)": [[30, "pywr.parameters.AnnualHarmonicSeriesParameter.__init__", false]], "__init__() (pywr.parameters.arrayindexedparameter method)": [[31, "pywr.parameters.ArrayIndexedParameter.__init__", false]], "__init__() (pywr.parameters.arrayindexedscenariomonthlyfactorsparameter method)": [[32, "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter.__init__", false]], "__init__() (pywr.parameters.arrayindexedscenarioparameter method)": [[33, "pywr.parameters.ArrayIndexedScenarioParameter.__init__", false]], "__init__() (pywr.parameters.binarystepparameter method)": [[34, "pywr.parameters.BinaryStepParameter.__init__", false]], "__init__() (pywr.parameters.constantparameter method)": [[35, "pywr.parameters.ConstantParameter.__init__", false]], "__init__() (pywr.parameters.constantscenarioindexparameter method)": [[36, "pywr.parameters.ConstantScenarioIndexParameter.__init__", false]], "__init__() (pywr.parameters.constantscenarioparameter method)": [[37, "pywr.parameters.ConstantScenarioParameter.__init__", false]], "__init__() (pywr.parameters.control_curves.basecontrolcurveparameter method)": [[86, "pywr.parameters.control_curves.BaseControlCurveParameter.__init__", false]], "__init__() (pywr.parameters.control_curves.controlcurveindexparameter method)": [[87, "pywr.parameters.control_curves.ControlCurveIndexParameter.__init__", false]], "__init__() (pywr.parameters.control_curves.controlcurveinterpolatedparameter method)": [[88, "pywr.parameters.control_curves.ControlCurveInterpolatedParameter.__init__", false]], "__init__() (pywr.parameters.control_curves.controlcurveparameter method)": [[89, "pywr.parameters.control_curves.ControlCurveParameter.__init__", false]], "__init__() (pywr.parameters.control_curves.controlcurvepiecewiseinterpolatedparameter method)": [[90, "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter.__init__", false]], "__init__() (pywr.parameters.currentordinaldaythresholdparameter method)": [[38, "pywr.parameters.CurrentOrdinalDayThresholdParameter.__init__", false]], "__init__() (pywr.parameters.currentyearthresholdparameter method)": [[39, "pywr.parameters.CurrentYearThresholdParameter.__init__", false]], "__init__() (pywr.parameters.dailyprofileparameter method)": [[40, "pywr.parameters.DailyProfileParameter.__init__", false]], "__init__() (pywr.parameters.dataframeparameter method)": [[41, "pywr.parameters.DataFrameParameter.__init__", false]], "__init__() (pywr.parameters.deficitparameter method)": [[42, "pywr.parameters.DeficitParameter.__init__", false]], "__init__() (pywr.parameters.discountfactorparameter method)": [[43, "pywr.parameters.DiscountFactorParameter.__init__", false]], "__init__() (pywr.parameters.divisionparameter method)": [[44, "pywr.parameters.DivisionParameter.__init__", false]], "__init__() (pywr.parameters.flowdelayparameter method)": [[45, "pywr.parameters.FlowDelayParameter.__init__", false]], "__init__() (pywr.parameters.flowparameter method)": [[46, "pywr.parameters.FlowParameter.__init__", false]], "__init__() (pywr.parameters.hydropowertargetparameter method)": [[47, "pywr.parameters.HydropowerTargetParameter.__init__", false]], "__init__() (pywr.parameters.indexedarrayparameter method)": [[49, "pywr.parameters.IndexedArrayParameter.__init__", false]], "__init__() (pywr.parameters.indexparameter method)": [[48, "pywr.parameters.IndexParameter.__init__", false]], "__init__() (pywr.parameters.interpolatedflowparameter method)": [[50, "pywr.parameters.InterpolatedFlowParameter.__init__", false]], "__init__() (pywr.parameters.interpolatedparameter method)": [[51, "pywr.parameters.InterpolatedParameter.__init__", false]], "__init__() (pywr.parameters.interpolatedquadratureparameter method)": [[52, "pywr.parameters.InterpolatedQuadratureParameter.__init__", false]], "__init__() (pywr.parameters.interpolatedvolumeparameter method)": [[53, "pywr.parameters.InterpolatedVolumeParameter.__init__", false]], "__init__() (pywr.parameters.logisticparameter method)": [[54, "pywr.parameters.LogisticParameter.__init__", false]], "__init__() (pywr.parameters.maxparameter method)": [[55, "pywr.parameters.MaxParameter.__init__", false]], "__init__() (pywr.parameters.minparameter method)": [[56, "pywr.parameters.MinParameter.__init__", false]], "__init__() (pywr.parameters.monthlyprofileparameter method)": [[57, "pywr.parameters.MonthlyProfileParameter.__init__", false]], "__init__() (pywr.parameters.multiplethresholdindexparameter method)": [[58, "pywr.parameters.MultipleThresholdIndexParameter.__init__", false]], "__init__() (pywr.parameters.multiplethresholdparameterindexparameter method)": [[59, "pywr.parameters.MultipleThresholdParameterIndexParameter.__init__", false]], "__init__() (pywr.parameters.negativemaxparameter method)": [[60, "pywr.parameters.NegativeMaxParameter.__init__", false]], "__init__() (pywr.parameters.negativeminparameter method)": [[61, "pywr.parameters.NegativeMinParameter.__init__", false]], "__init__() (pywr.parameters.negativeparameter method)": [[62, "pywr.parameters.NegativeParameter.__init__", false]], "__init__() (pywr.parameters.nodethresholdparameter method)": [[63, "pywr.parameters.NodeThresholdParameter.__init__", false]], "__init__() (pywr.parameters.offsetparameter method)": [[64, "pywr.parameters.OffsetParameter.__init__", false]], "__init__() (pywr.parameters.othermodelindexparametervalueindexparameter method)": [[65, "pywr.parameters.OtherModelIndexParameterValueIndexParameter.__init__", false]], "__init__() (pywr.parameters.othermodelnodeflowparameter method)": [[66, "pywr.parameters.OtherModelNodeFlowParameter.__init__", false]], "__init__() (pywr.parameters.othermodelnodestorageparameter method)": [[67, "pywr.parameters.OtherModelNodeStorageParameter.__init__", false]], "__init__() (pywr.parameters.othermodelparametervalueparameter method)": [[68, "pywr.parameters.OtherModelParameterValueParameter.__init__", false]], "__init__() (pywr.parameters.parameter method)": [[69, "pywr.parameters.Parameter.__init__", false]], "__init__() (pywr.parameters.parameterthresholdparameter method)": [[70, "pywr.parameters.ParameterThresholdParameter.__init__", false]], "__init__() (pywr.parameters.piecewiseintegralparameter method)": [[71, "pywr.parameters.PiecewiseIntegralParameter.__init__", false]], "__init__() (pywr.parameters.rbfprofileparameter method)": [[72, "pywr.parameters.RbfProfileParameter.__init__", false]], "__init__() (pywr.parameters.recorderthresholdparameter method)": [[73, "pywr.parameters.RecorderThresholdParameter.__init__", false]], "__init__() (pywr.parameters.rectifierparameter method)": [[74, "pywr.parameters.RectifierParameter.__init__", false]], "__init__() (pywr.parameters.rollingmeanflownodeparameter method)": [[75, "pywr.parameters.RollingMeanFlowNodeParameter.__init__", false]], "__init__() (pywr.parameters.scenariodailyprofileparameter method)": [[76, "pywr.parameters.ScenarioDailyProfileParameter.__init__", false]], "__init__() (pywr.parameters.scenariomonthlyprofileparameter method)": [[77, "pywr.parameters.ScenarioMonthlyProfileParameter.__init__", false]], "__init__() (pywr.parameters.scenarioweeklyprofileparameter method)": [[78, "pywr.parameters.ScenarioWeeklyProfileParameter.__init__", false]], "__init__() (pywr.parameters.scenariowrapperparameter method)": [[79, "pywr.parameters.ScenarioWrapperParameter.__init__", false]], "__init__() (pywr.parameters.storageparameter method)": [[80, "pywr.parameters.StorageParameter.__init__", false]], "__init__() (pywr.parameters.storagethresholdparameter method)": [[81, "pywr.parameters.StorageThresholdParameter.__init__", false]], "__init__() (pywr.parameters.tablesarrayparameter method)": [[82, "pywr.parameters.TablesArrayParameter.__init__", false]], "__init__() (pywr.parameters.uniformdrawdownprofileparameter method)": [[83, "pywr.parameters.UniformDrawdownProfileParameter.__init__", false]], "__init__() (pywr.parameters.weeklyprofileparameter method)": [[84, "pywr.parameters.WeeklyProfileParameter.__init__", false]], "__init__() (pywr.parameters.weightedaverageprofileparameter method)": [[85, "pywr.parameters.WeightedAverageProfileParameter.__init__", false]], "__init__() (pywr.recorders.aggregatedrecorder method)": [[91, "pywr.recorders.AggregatedRecorder.__init__", false]], "__init__() (pywr.recorders.aggregator method)": [[92, "pywr.recorders.Aggregator.__init__", false]], "__init__() (pywr.recorders.annualcountindexparameterrecorder method)": [[93, "pywr.recorders.AnnualCountIndexParameterRecorder.__init__", false]], "__init__() (pywr.recorders.annualcountindexthresholdrecorder method)": [[94, "pywr.recorders.AnnualCountIndexThresholdRecorder.__init__", false]], "__init__() (pywr.recorders.annualtotalflowrecorder method)": [[95, "pywr.recorders.AnnualTotalFlowRecorder.__init__", false]], "__init__() (pywr.recorders.csvrecorder method)": [[96, "pywr.recorders.CSVRecorder.__init__", false]], "__init__() (pywr.recorders.deficitfrequencynoderecorder method)": [[97, "pywr.recorders.DeficitFrequencyNodeRecorder.__init__", false]], "__init__() (pywr.recorders.flowdurationcurvedeviationrecorder method)": [[98, "pywr.recorders.FlowDurationCurveDeviationRecorder.__init__", false]], "__init__() (pywr.recorders.flowdurationcurverecorder method)": [[99, "pywr.recorders.FlowDurationCurveRecorder.__init__", false]], "__init__() (pywr.recorders.gaussiankdestoragerecorder method)": [[100, "pywr.recorders.GaussianKDEStorageRecorder.__init__", false]], "__init__() (pywr.recorders.hydropowerrecorder method)": [[101, "pywr.recorders.HydropowerRecorder.__init__", false]], "__init__() (pywr.recorders.indexparameterrecorder method)": [[102, "pywr.recorders.IndexParameterRecorder.__init__", false]], "__init__() (pywr.recorders.meanflownoderecorder method)": [[103, "pywr.recorders.MeanFlowNodeRecorder.__init__", false]], "__init__() (pywr.recorders.meanparameterrecorder method)": [[104, "pywr.recorders.MeanParameterRecorder.__init__", false]], "__init__() (pywr.recorders.minimumthresholdvolumestoragerecorder method)": [[105, "pywr.recorders.MinimumThresholdVolumeStorageRecorder.__init__", false]], "__init__() (pywr.recorders.minimumvolumestoragerecorder method)": [[106, "pywr.recorders.MinimumVolumeStorageRecorder.__init__", false]], "__init__() (pywr.recorders.noderecorder method)": [[107, "pywr.recorders.NodeRecorder.__init__", false]], "__init__() (pywr.recorders.normalisedgaussiankdestoragerecorder method)": [[108, "pywr.recorders.NormalisedGaussianKDEStorageRecorder.__init__", false]], "__init__() (pywr.recorders.numpyarrayarearecorder method)": [[109, "pywr.recorders.NumpyArrayAreaRecorder.__init__", false]], "__init__() (pywr.recorders.numpyarraydailyprofileparameterrecorder method)": [[110, "pywr.recorders.NumpyArrayDailyProfileParameterRecorder.__init__", false]], "__init__() (pywr.recorders.numpyarrayindexparameterrecorder method)": [[111, "pywr.recorders.NumpyArrayIndexParameterRecorder.__init__", false]], "__init__() (pywr.recorders.numpyarraylevelrecorder method)": [[112, "pywr.recorders.NumpyArrayLevelRecorder.__init__", false]], "__init__() (pywr.recorders.numpyarraynodecurtailmentratiorecorder method)": [[113, "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder.__init__", false]], "__init__() (pywr.recorders.numpyarraynodedeficitrecorder method)": [[114, "pywr.recorders.NumpyArrayNodeDeficitRecorder.__init__", false]], "__init__() (pywr.recorders.numpyarraynoderecorder method)": [[115, "pywr.recorders.NumpyArrayNodeRecorder.__init__", false]], "__init__() (pywr.recorders.numpyarraynodesuppliedratiorecorder method)": [[116, "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder.__init__", false]], "__init__() (pywr.recorders.numpyarrayparameterrecorder method)": [[117, "pywr.recorders.NumpyArrayParameterRecorder.__init__", false]], "__init__() (pywr.recorders.numpyarraystoragerecorder method)": [[118, "pywr.recorders.NumpyArrayStorageRecorder.__init__", false]], "__init__() (pywr.recorders.parameterrecorder method)": [[119, "pywr.recorders.ParameterRecorder.__init__", false]], "__init__() (pywr.recorders.recorder method)": [[120, "pywr.recorders.Recorder.__init__", false]], "__init__() (pywr.recorders.rollingmeanflownoderecorder method)": [[121, "pywr.recorders.RollingMeanFlowNodeRecorder.__init__", false]], "__init__() (pywr.recorders.rollingwindowparameterrecorder method)": [[122, "pywr.recorders.RollingWindowParameterRecorder.__init__", false]], "__init__() (pywr.recorders.seasonalflowdurationcurverecorder method)": [[123, "pywr.recorders.SeasonalFlowDurationCurveRecorder.__init__", false]], "__init__() (pywr.recorders.storagedurationcurverecorder method)": [[124, "pywr.recorders.StorageDurationCurveRecorder.__init__", false]], "__init__() (pywr.recorders.storagerecorder method)": [[125, "pywr.recorders.StorageRecorder.__init__", false]], "__init__() (pywr.recorders.tablesrecorder method)": [[126, "pywr.recorders.TablesRecorder.__init__", false]], "__init__() (pywr.recorders.timestepcountindexparameterrecorder method)": [[127, "pywr.recorders.TimestepCountIndexParameterRecorder.__init__", false]], "__init__() (pywr.recorders.totaldeficitnoderecorder method)": [[128, "pywr.recorders.TotalDeficitNodeRecorder.__init__", false]], "__init__() (pywr.recorders.totalflownoderecorder method)": [[129, "pywr.recorders.TotalFlowNodeRecorder.__init__", false]], "__init__() (pywr.recorders.totalhydroenergyrecorder method)": [[130, "pywr.recorders.TotalHydroEnergyRecorder.__init__", false]], "__init__() (pywr.recorders.totalparameterrecorder method)": [[131, "pywr.recorders.TotalParameterRecorder.__init__", false]], "abstractnodedata (class in pywr.solvers.cython_glpk)": [[139, "pywr.solvers.cython_glpk.AbstractNodeData", false]], "abstractthresholdparameter (class in pywr.parameters)": [[27, "pywr.parameters.AbstractThresholdParameter", false]], "aggnodefactordata (class in pywr.solvers.cython_glpk)": [[139, "pywr.solvers.cython_glpk.AggNodeFactorData", false]], "aggregatedindexparameter (class in pywr.parameters)": [[28, "pywr.parameters.AggregatedIndexParameter", false]], "aggregatednode (class in pywr.nodes)": [[10, "pywr.nodes.AggregatedNode", false]], "aggregatedparameter (class in pywr.parameters)": [[29, "pywr.parameters.AggregatedParameter", false]], "aggregatedrecorder (class in pywr.recorders)": [[91, "pywr.recorders.AggregatedRecorder", false]], "aggregatedstorage (class in pywr.nodes)": [[11, "pywr.nodes.AggregatedStorage", false]], "aggregator (class in pywr.recorders)": [[92, "pywr.recorders.Aggregator", false]], "annualcountindexparameterrecorder (class in pywr.recorders)": [[93, "pywr.recorders.AnnualCountIndexParameterRecorder", false]], "annualcountindexthresholdrecorder (class in pywr.recorders)": [[94, "pywr.recorders.AnnualCountIndexThresholdRecorder", false]], "annualharmonicseriesparameter (class in pywr.parameters)": [[30, "pywr.parameters.AnnualHarmonicSeriesParameter", false]], "annualtotalflowrecorder (class in pywr.recorders)": [[95, "pywr.recorders.AnnualTotalFlowRecorder", false]], "annualvirtualstorage (class in pywr.nodes)": [[12, "pywr.nodes.AnnualVirtualStorage", false]], "arrayindexedparameter (class in pywr.parameters)": [[31, "pywr.parameters.ArrayIndexedParameter", false]], "arrayindexedscenariomonthlyfactorsparameter (class in pywr.parameters)": [[32, "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter", false]], "arrayindexedscenarioparameter (class in pywr.parameters)": [[33, "pywr.parameters.ArrayIndexedScenarioParameter", false]], "basecontrolcurveparameter (class in pywr.parameters.control_curves)": [[86, "pywr.parameters.control_curves.BaseControlCurveParameter", false]], "baseoptimisationwrapper (class in pywr.optimisation)": [[136, "pywr.optimisation.BaseOptimisationWrapper", false]], "basismanager (class in pywr.solvers.cython_glpk)": [[139, "pywr.solvers.cython_glpk.BasisManager", false]], "binarystepparameter (class in pywr.parameters)": [[34, "pywr.parameters.BinaryStepParameter", false]], "bisectionsearchmodel (class in pywr.utils.bisect)": [[140, "pywr.utils.bisect.BisectionSearchModel", false]], "breaklink (class in pywr.nodes)": [[13, "pywr.nodes.BreakLink", false]], "cache_constraints() (in module pywr.optimisation)": [[136, "pywr.optimisation.cache_constraints", false]], "cache_objectives() (in module pywr.optimisation)": [[136, "pywr.optimisation.cache_objectives", false]], "cache_variable_parameters() (in module pywr.optimisation)": [[136, "pywr.optimisation.cache_variable_parameters", false]], "catchment (class in pywr.domains.river)": [[4, "pywr.domains.river.Catchment", false]], "clear_global_model_cache() (in module pywr.optimisation)": [[136, "pywr.optimisation.clear_global_model_cache", false]], "constantparameter (class in pywr.parameters)": [[35, "pywr.parameters.ConstantParameter", false]], "constantscenarioindexparameter (class in pywr.parameters)": [[36, "pywr.parameters.ConstantScenarioIndexParameter", false]], "constantscenarioparameter (class in pywr.parameters)": [[37, "pywr.parameters.ConstantScenarioParameter", false]], "controlcurveindexparameter (class in pywr.parameters.control_curves)": [[87, "pywr.parameters.control_curves.ControlCurveIndexParameter", false]], "controlcurveinterpolatedparameter (class in pywr.parameters.control_curves)": [[88, "pywr.parameters.control_curves.ControlCurveInterpolatedParameter", false]], "controlcurveparameter (class in pywr.parameters.control_curves)": [[89, "pywr.parameters.control_curves.ControlCurveParameter", false]], "controlcurvepiecewiseinterpolatedparameter (class in pywr.parameters.control_curves)": [[90, "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter", false]], "csvrecorder (class in pywr.recorders)": [[96, "pywr.recorders.CSVRecorder", false]], "currentordinaldaythresholdparameter (class in pywr.parameters)": [[38, "pywr.parameters.CurrentOrdinalDayThresholdParameter", false]], "currentyearthresholdparameter (class in pywr.parameters)": [[39, "pywr.parameters.CurrentYearThresholdParameter", false]], "customise_model() (pywr.optimisation.baseoptimisationwrapper method)": [[136, "pywr.optimisation.BaseOptimisationWrapper.customise_model", false]], "cythonglpkedgesolver (class in pywr.solvers)": [[139, "pywr.solvers.CythonGLPKEdgeSolver", false]], "cythonglpkedgesolver (class in pywr.solvers.cython_glpk)": [[139, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver", false]], "cythonglpksolver (class in pywr.solvers)": [[139, "pywr.solvers.CythonGLPKSolver", false]], "cythonglpksolver (class in pywr.solvers.cython_glpk)": [[139, "pywr.solvers.cython_glpk.CythonGLPKSolver", false]], "dailyprofileparameter (class in pywr.parameters)": [[40, "pywr.parameters.DailyProfileParameter", false]], "dataframeparameter (class in pywr.parameters)": [[41, "pywr.parameters.DataFrameParameter", false]], "deficitfrequencynoderecorder (class in pywr.recorders)": [[97, "pywr.recorders.DeficitFrequencyNodeRecorder", false]], "deficitparameter (class in pywr.parameters)": [[42, "pywr.parameters.DeficitParameter", false]], "delaynode (class in pywr.nodes)": [[14, "pywr.nodes.DelayNode", false]], "discountfactorparameter (class in pywr.parameters)": [[43, "pywr.parameters.DiscountFactorParameter", false]], "divisionparameter (class in pywr.parameters)": [[44, "pywr.parameters.DivisionParameter", false]], "dump_glpk() (pywr.solvers.cython_glpk.glpksolver method)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.dump_glpk", false]], "dump_glpk() (pywr.solvers.cythonglpkedgesolver method)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.dump_glpk", false]], "dump_glpk() (pywr.solvers.cythonglpksolver method)": [[139, "pywr.solvers.CythonGLPKSolver.dump_glpk", false]], "dump_lp() (pywr.solvers.cython_glpk.glpksolver method)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.dump_lp", false]], "dump_lp() (pywr.solvers.cythonglpkedgesolver method)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.dump_lp", false]], "dump_lp() (pywr.solvers.cythonglpksolver method)": [[139, "pywr.solvers.CythonGLPKSolver.dump_lp", false]], "dump_mps() (pywr.solvers.cython_glpk.glpksolver method)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.dump_mps", false]], "dump_mps() (pywr.solvers.cythonglpkedgesolver method)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.dump_mps", false]], "dump_mps() (pywr.solvers.cythonglpksolver method)": [[139, "pywr.solvers.CythonGLPKSolver.dump_mps", false]], "fitness() (pywr.optimisation.pygmo.pygmowrapper method)": [[136, "pywr.optimisation.pygmo.PygmoWrapper.fitness", false]], "flowdelayparameter (class in pywr.parameters)": [[45, "pywr.parameters.FlowDelayParameter", false]], "flowdurationcurvedeviationrecorder (class in pywr.recorders)": [[98, "pywr.recorders.FlowDurationCurveDeviationRecorder", false]], "flowdurationcurverecorder (class in pywr.recorders)": [[99, "pywr.recorders.FlowDurationCurveRecorder", false]], "flowparameter (class in pywr.parameters)": [[46, "pywr.parameters.FlowParameter", false]], "gaussiankdestoragerecorder (class in pywr.recorders)": [[100, "pywr.recorders.GaussianKDEStorageRecorder", false]], "get_bounds() (pywr.optimisation.pygmo.pygmowrapper method)": [[136, "pywr.optimisation.pygmo.PygmoWrapper.get_bounds", false]], "get_nec() (pywr.optimisation.pygmo.pygmowrapper method)": [[136, "pywr.optimisation.pygmo.PygmoWrapper.get_nec", false]], "get_nic() (pywr.optimisation.pygmo.pygmowrapper method)": [[136, "pywr.optimisation.pygmo.PygmoWrapper.get_nic", false]], "get_nobj() (pywr.optimisation.pygmo.pygmowrapper method)": [[136, "pywr.optimisation.pygmo.PygmoWrapper.get_nobj", false]], "glpkerror": [[139, "pywr.solvers.cython_glpk.GLPKError", false]], "glpkinternalerror": [[139, "pywr.solvers.cython_glpk.GLPKInternalError", false]], "glpksolver (class in pywr.solvers.cython_glpk)": [[139, "pywr.solvers.cython_glpk.GLPKSolver", false]], "hydropowerrecorder (class in pywr.recorders)": [[101, "pywr.recorders.HydropowerRecorder", false]], "hydropowertargetparameter (class in pywr.parameters)": [[47, "pywr.parameters.HydropowerTargetParameter", false]], "id (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[139, "pywr.solvers.cython_glpk.AbstractNodeData.id", false]], "in_edges (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[139, "pywr.solvers.cython_glpk.AbstractNodeData.in_edges", false]], "ind_ptr (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[139, "pywr.solvers.cython_glpk.AggNodeFactorData.ind_ptr", false]], "indexedarrayparameter (class in pywr.parameters)": [[49, "pywr.parameters.IndexedArrayParameter", false]], "indexparameter (class in pywr.parameters)": [[48, "pywr.parameters.IndexParameter", false]], "indexparameterrecorder (class in pywr.recorders)": [[102, "pywr.recorders.IndexParameterRecorder", false]], "inds (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[139, "pywr.solvers.cython_glpk.AggNodeFactorData.inds", false]], "input (class in pywr.nodes)": [[15, "pywr.nodes.Input", false]], "interpolatedflowparameter (class in pywr.parameters)": [[50, "pywr.parameters.InterpolatedFlowParameter", false]], "interpolatedparameter (class in pywr.parameters)": [[51, "pywr.parameters.InterpolatedParameter", false]], "interpolatedquadratureparameter (class in pywr.parameters)": [[52, "pywr.parameters.InterpolatedQuadratureParameter", false]], "interpolatedvolumeparameter (class in pywr.parameters)": [[53, "pywr.parameters.InterpolatedVolumeParameter", false]], "is_link (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[139, "pywr.solvers.cython_glpk.AbstractNodeData.is_link", false]], "link (class in pywr.nodes)": [[16, "pywr.nodes.Link", false]], "logisticparameter (class in pywr.parameters)": [[54, "pywr.parameters.LogisticParameter", false]], "losslink (class in pywr.nodes)": [[17, "pywr.nodes.LossLink", false]], "make_model() (pywr.optimisation.baseoptimisationwrapper method)": [[136, "pywr.optimisation.BaseOptimisationWrapper.make_model", false]], "maxparameter (class in pywr.parameters)": [[55, "pywr.parameters.MaxParameter", false]], "meanflownoderecorder (class in pywr.recorders)": [[103, "pywr.recorders.MeanFlowNodeRecorder", false]], "meanparameterrecorder (class in pywr.recorders)": [[104, "pywr.recorders.MeanParameterRecorder", false]], "minimumthresholdvolumestoragerecorder (class in pywr.recorders)": [[105, "pywr.recorders.MinimumThresholdVolumeStorageRecorder", false]], "minimumvolumestoragerecorder (class in pywr.recorders)": [[106, "pywr.recorders.MinimumVolumeStorageRecorder", false]], "minparameter (class in pywr.parameters)": [[56, "pywr.parameters.MinParameter", false]], "model (pywr.optimisation.baseoptimisationwrapper property)": [[136, "pywr.optimisation.BaseOptimisationWrapper.model", false]], "model_constraints (pywr.optimisation.baseoptimisationwrapper property)": [[136, "pywr.optimisation.BaseOptimisationWrapper.model_constraints", false]], "model_objectives (pywr.optimisation.baseoptimisationwrapper property)": [[136, "pywr.optimisation.BaseOptimisationWrapper.model_objectives", false]], "model_variable_map (pywr.optimisation.baseoptimisationwrapper property)": [[136, "pywr.optimisation.BaseOptimisationWrapper.model_variable_map", false]], "model_variables (pywr.optimisation.baseoptimisationwrapper property)": [[136, "pywr.optimisation.BaseOptimisationWrapper.model_variables", false]], "modelcache (class in pywr.optimisation)": [[136, "pywr.optimisation.ModelCache", false]], "module": [[136, "module-pywr.optimisation", false], [136, "module-pywr.optimisation.pygmo", false], [139, "module-pywr.solvers", false], [139, "module-pywr.solvers.cython_glpk", false], [140, "module-pywr.utils.bisect", false]], "monthlyprofileparameter (class in pywr.parameters)": [[57, "pywr.parameters.MonthlyProfileParameter", false]], "monthlyvirtualstorage (class in pywr.nodes)": [[18, "pywr.nodes.MonthlyVirtualStorage", false]], "multiplethresholdindexparameter (class in pywr.parameters)": [[58, "pywr.parameters.MultipleThresholdIndexParameter", false]], "multiplethresholdparameterindexparameter (class in pywr.parameters)": [[59, "pywr.parameters.MultipleThresholdParameterIndexParameter", false]], "multisplitlink (class in pywr.nodes)": [[19, "pywr.nodes.MultiSplitLink", false]], "name (pywr.solvers.cythonglpkedgesolver attribute)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.name", false]], "name (pywr.solvers.cythonglpksolver attribute)": [[139, "pywr.solvers.CythonGLPKSolver.name", false]], "name (pywr.solvers.nullsolver attribute)": [[139, "pywr.solvers.NullSolver.name", false]], "name (pywr.solvers.solver attribute)": [[139, "pywr.solvers.Solver.name", false]], "negativemaxparameter (class in pywr.parameters)": [[60, "pywr.parameters.NegativeMaxParameter", false]], "negativeminparameter (class in pywr.parameters)": [[61, "pywr.parameters.NegativeMinParameter", false]], "negativeparameter (class in pywr.parameters)": [[62, "pywr.parameters.NegativeParameter", false]], "node (class in pywr.nodes)": [[20, "pywr.nodes.Node", false]], "node_ind (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[139, "pywr.solvers.cython_glpk.AggNodeFactorData.node_ind", false]], "noderecorder (class in pywr.recorders)": [[107, "pywr.recorders.NodeRecorder", false]], "nodethresholdparameter (class in pywr.parameters)": [[63, "pywr.parameters.NodeThresholdParameter", false]], "normalisedgaussiankdestoragerecorder (class in pywr.recorders)": [[108, "pywr.recorders.NormalisedGaussianKDEStorageRecorder", false]], "nullsolver (class in pywr.solvers)": [[139, "pywr.solvers.NullSolver", false]], "numpyarrayarearecorder (class in pywr.recorders)": [[109, "pywr.recorders.NumpyArrayAreaRecorder", false]], "numpyarraydailyprofileparameterrecorder (class in pywr.recorders)": [[110, "pywr.recorders.NumpyArrayDailyProfileParameterRecorder", false]], "numpyarrayindexparameterrecorder (class in pywr.recorders)": [[111, "pywr.recorders.NumpyArrayIndexParameterRecorder", false]], "numpyarraylevelrecorder (class in pywr.recorders)": [[112, "pywr.recorders.NumpyArrayLevelRecorder", false]], "numpyarraynodecurtailmentratiorecorder (class in pywr.recorders)": [[113, "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder", false]], "numpyarraynodedeficitrecorder (class in pywr.recorders)": [[114, "pywr.recorders.NumpyArrayNodeDeficitRecorder", false]], "numpyarraynoderecorder (class in pywr.recorders)": [[115, "pywr.recorders.NumpyArrayNodeRecorder", false]], "numpyarraynodesuppliedratiorecorder (class in pywr.recorders)": [[116, "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder", false]], "numpyarrayparameterrecorder (class in pywr.recorders)": [[117, "pywr.recorders.NumpyArrayParameterRecorder", false]], "numpyarraystoragerecorder (class in pywr.recorders)": [[118, "pywr.recorders.NumpyArrayStorageRecorder", false]], "offsetparameter (class in pywr.parameters)": [[64, "pywr.parameters.OffsetParameter", false]], "othermodelindexparametervalueindexparameter (class in pywr.parameters)": [[65, "pywr.parameters.OtherModelIndexParameterValueIndexParameter", false]], "othermodelnodeflowparameter (class in pywr.parameters)": [[66, "pywr.parameters.OtherModelNodeFlowParameter", false]], "othermodelnodestorageparameter (class in pywr.parameters)": [[67, "pywr.parameters.OtherModelNodeStorageParameter", false]], "othermodelparametervalueparameter (class in pywr.parameters)": [[68, "pywr.parameters.OtherModelParameterValueParameter", false]], "out_edges (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[139, "pywr.solvers.cython_glpk.AbstractNodeData.out_edges", false]], "output (class in pywr.nodes)": [[21, "pywr.nodes.Output", false]], "parameter (class in pywr.parameters)": [[69, "pywr.parameters.Parameter", false]], "parameterrecorder (class in pywr.recorders)": [[119, "pywr.recorders.ParameterRecorder", false]], "parameterthresholdparameter (class in pywr.parameters)": [[70, "pywr.parameters.ParameterThresholdParameter", false]], "piecewiseintegralparameter (class in pywr.parameters)": [[71, "pywr.parameters.PiecewiseIntegralParameter", false]], "piecewiselink (class in pywr.nodes)": [[22, "pywr.nodes.PiecewiseLink", false]], "pygmowrapper (class in pywr.optimisation.pygmo)": [[136, "pywr.optimisation.pygmo.PygmoWrapper", false]], "pywr.optimisation": [[136, "module-pywr.optimisation", false]], "pywr.optimisation.pygmo": [[136, "module-pywr.optimisation.pygmo", false]], "pywr.solvers": [[139, "module-pywr.solvers", false]], "pywr.solvers.cython_glpk": [[139, "module-pywr.solvers.cython_glpk", false]], "pywr.utils.bisect": [[140, "module-pywr.utils.bisect", false]], "rbfprofileparameter (class in pywr.parameters)": [[72, "pywr.parameters.RbfProfileParameter", false]], "recorder (class in pywr.recorders)": [[120, "pywr.recorders.Recorder", false]], "recorderthresholdparameter (class in pywr.parameters)": [[73, "pywr.parameters.RecorderThresholdParameter", false]], "rectifierparameter (class in pywr.parameters)": [[74, "pywr.parameters.RectifierParameter", false]], "reservoir (class in pywr.domains.river)": [[5, "pywr.domains.river.Reservoir", false]], "reset() (pywr.solvers.cython_glpk.cythonglpkedgesolver method)": [[139, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.reset", false]], "reset() (pywr.solvers.cython_glpk.cythonglpksolver method)": [[139, "pywr.solvers.cython_glpk.CythonGLPKSolver.reset", false]], "reset() (pywr.solvers.cython_glpk.glpksolver method)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.reset", false]], "reset() (pywr.solvers.cythonglpkedgesolver method)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.reset", false]], "reset() (pywr.solvers.cythonglpksolver method)": [[139, "pywr.solvers.CythonGLPKSolver.reset", false]], "reset() (pywr.solvers.nullsolver method)": [[139, "pywr.solvers.NullSolver.reset", false]], "reset() (pywr.solvers.solver method)": [[139, "pywr.solvers.Solver.reset", false]], "retry_solve (pywr.solvers.cython_glpk.cythonglpkedgesolver attribute)": [[139, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.retry_solve", false]], "retry_solve (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[139, "pywr.solvers.cython_glpk.CythonGLPKSolver.retry_solve", false]], "retry_solve (pywr.solvers.cythonglpkedgesolver property)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.retry_solve", false]], "retry_solve (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.retry_solve", false]], "river (class in pywr.domains.river)": [[6, "pywr.domains.river.River", false]], "rivergauge (class in pywr.domains.river)": [[7, "pywr.domains.river.RiverGauge", false]], "riversplit (class in pywr.domains.river)": [[8, "pywr.domains.river.RiverSplit", false]], "riversplitwithgauge (class in pywr.domains.river)": [[9, "pywr.domains.river.RiverSplitWithGauge", false]], "rollingmeanflownodeparameter (class in pywr.parameters)": [[75, "pywr.parameters.RollingMeanFlowNodeParameter", false]], "rollingmeanflownoderecorder (class in pywr.recorders)": [[121, "pywr.recorders.RollingMeanFlowNodeRecorder", false]], "rollingvirtualstorage (class in pywr.nodes)": [[23, "pywr.nodes.RollingVirtualStorage", false]], "rollingwindowparameterrecorder (class in pywr.recorders)": [[122, "pywr.recorders.RollingWindowParameterRecorder", false]], "route_flows_arr (pywr.solvers.cython_glpk.cythonglpkedgesolver attribute)": [[139, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.route_flows_arr", false]], "route_flows_arr (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[139, "pywr.solvers.cython_glpk.CythonGLPKSolver.route_flows_arr", false]], "routes (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[139, "pywr.solvers.cython_glpk.CythonGLPKSolver.routes", false]], "routes (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.routes", false]], "routes_flows_array (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.routes_flows_array", false]], "row (pywr.solvers.cython_glpk.abstractnodedata attribute)": [[139, "pywr.solvers.cython_glpk.AbstractNodeData.row", false]], "row (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[139, "pywr.solvers.cython_glpk.AggNodeFactorData.row", false]], "run() (pywr.utils.bisect.bisectionsearchmodel method)": [[140, "pywr.utils.bisect.BisectionSearchModel.run", false]], "save_routes_flows (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[139, "pywr.solvers.cython_glpk.CythonGLPKSolver.save_routes_flows", false]], "save_routes_flows (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.save_routes_flows", false]], "scenario (class in pywr.core)": [[0, "pywr.core.Scenario", false]], "scenariocollection (class in pywr.core)": [[1, "pywr.core.ScenarioCollection", false]], "scenariodailyprofileparameter (class in pywr.parameters)": [[76, "pywr.parameters.ScenarioDailyProfileParameter", false]], "scenarioindex (class in pywr.core)": [[2, "pywr.core.ScenarioIndex", false]], "scenariomonthlyprofileparameter (class in pywr.parameters)": [[77, "pywr.parameters.ScenarioMonthlyProfileParameter", false]], "scenarioweeklyprofileparameter (class in pywr.parameters)": [[78, "pywr.parameters.ScenarioWeeklyProfileParameter", false]], "scenariowrapperparameter (class in pywr.parameters)": [[79, "pywr.parameters.ScenarioWrapperParameter", false]], "seasonalflowdurationcurverecorder (class in pywr.recorders)": [[123, "pywr.recorders.SeasonalFlowDurationCurveRecorder", false]], "seasonalvirtualstorage (class in pywr.nodes)": [[24, "pywr.nodes.SeasonalVirtualStorage", false]], "set_fixed_costs_once (pywr.solvers.cython_glpk.glpksolver attribute)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.set_fixed_costs_once", false]], "set_fixed_costs_once (pywr.solvers.cythonglpkedgesolver property)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.set_fixed_costs_once", false]], "set_fixed_costs_once (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.set_fixed_costs_once", false]], "set_fixed_factors_once (pywr.solvers.cython_glpk.glpksolver attribute)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.set_fixed_factors_once", false]], "set_fixed_factors_once (pywr.solvers.cythonglpkedgesolver property)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.set_fixed_factors_once", false]], "set_fixed_factors_once (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.set_fixed_factors_once", false]], "set_fixed_flows_once (pywr.solvers.cython_glpk.glpksolver attribute)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.set_fixed_flows_once", false]], "set_fixed_flows_once (pywr.solvers.cythonglpkedgesolver property)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.set_fixed_flows_once", false]], "set_fixed_flows_once (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.set_fixed_flows_once", false]], "set_solver_options() (pywr.solvers.cython_glpk.glpksolver method)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.set_solver_options", false]], "settings (pywr.solvers.cythonglpkedgesolver property)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.settings", false]], "settings (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.settings", false]], "settings (pywr.solvers.solver property)": [[139, "pywr.solvers.Solver.settings", false]], "setup() (pywr.solvers.cython_glpk.cythonglpkedgesolver method)": [[139, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.setup", false]], "setup() (pywr.solvers.cython_glpk.cythonglpksolver method)": [[139, "pywr.solvers.cython_glpk.CythonGLPKSolver.setup", false]], "setup() (pywr.solvers.cython_glpk.glpksolver method)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.setup", false]], "setup() (pywr.solvers.cythonglpkedgesolver method)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.setup", false]], "setup() (pywr.solvers.cythonglpksolver method)": [[139, "pywr.solvers.CythonGLPKSolver.setup", false]], "setup() (pywr.solvers.nullsolver method)": [[139, "pywr.solvers.NullSolver.setup", false]], "setup() (pywr.solvers.solver method)": [[139, "pywr.solvers.Solver.setup", false]], "solve() (pywr.solvers.cython_glpk.cythonglpkedgesolver method)": [[139, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.solve", false]], "solve() (pywr.solvers.cython_glpk.cythonglpksolver method)": [[139, "pywr.solvers.cython_glpk.CythonGLPKSolver.solve", false]], "solve() (pywr.solvers.cython_glpk.glpksolver method)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.solve", false]], "solve() (pywr.solvers.cythonglpkedgesolver method)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.solve", false]], "solve() (pywr.solvers.cythonglpksolver method)": [[139, "pywr.solvers.CythonGLPKSolver.solve", false]], "solve() (pywr.solvers.nullsolver method)": [[139, "pywr.solvers.NullSolver.solve", false]], "solve() (pywr.solvers.solver method)": [[139, "pywr.solvers.Solver.solve", false]], "solver (class in pywr.solvers)": [[139, "pywr.solvers.Solver", false]], "stats (pywr.solvers.cython_glpk.cythonglpkedgesolver attribute)": [[139, "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver.stats", false]], "stats (pywr.solvers.cython_glpk.cythonglpksolver attribute)": [[139, "pywr.solvers.cython_glpk.CythonGLPKSolver.stats", false]], "stats (pywr.solvers.cythonglpkedgesolver property)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.stats", false]], "stats (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.stats", false]], "stats (pywr.solvers.solver property)": [[139, "pywr.solvers.Solver.stats", false]], "storage (class in pywr.nodes)": [[25, "pywr.nodes.Storage", false]], "storagedurationcurverecorder (class in pywr.recorders)": [[124, "pywr.recorders.StorageDurationCurveRecorder", false]], "storageparameter (class in pywr.parameters)": [[80, "pywr.parameters.StorageParameter", false]], "storagerecorder (class in pywr.recorders)": [[125, "pywr.recorders.StorageRecorder", false]], "storagethresholdparameter (class in pywr.parameters)": [[81, "pywr.parameters.StorageThresholdParameter", false]], "tablesarrayparameter (class in pywr.parameters)": [[82, "pywr.parameters.TablesArrayParameter", false]], "tablesrecorder (class in pywr.recorders)": [[126, "pywr.recorders.TablesRecorder", false]], "timestep (class in pywr.core)": [[3, "pywr.core.Timestep", false]], "timestepcountindexparameterrecorder (class in pywr.recorders)": [[127, "pywr.recorders.TimestepCountIndexParameterRecorder", false]], "totaldeficitnoderecorder (class in pywr.recorders)": [[128, "pywr.recorders.TotalDeficitNodeRecorder", false]], "totalflownoderecorder (class in pywr.recorders)": [[129, "pywr.recorders.TotalFlowNodeRecorder", false]], "totalhydroenergyrecorder (class in pywr.recorders)": [[130, "pywr.recorders.TotalHydroEnergyRecorder", false]], "totalparameterrecorder (class in pywr.recorders)": [[131, "pywr.recorders.TotalParameterRecorder", false]], "uniformdrawdownprofileparameter (class in pywr.parameters)": [[83, "pywr.parameters.UniformDrawdownProfileParameter", false]], "use_presolve (pywr.solvers.cython_glpk.glpksolver attribute)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.use_presolve", false]], "use_presolve (pywr.solvers.cythonglpkedgesolver property)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.use_presolve", false]], "use_presolve (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.use_presolve", false]], "use_unsafe_api (pywr.solvers.cython_glpk.glpksolver attribute)": [[139, "pywr.solvers.cython_glpk.GLPKSolver.use_unsafe_api", false]], "use_unsafe_api (pywr.solvers.cythonglpkedgesolver property)": [[139, "pywr.solvers.CythonGLPKEdgeSolver.use_unsafe_api", false]], "use_unsafe_api (pywr.solvers.cythonglpksolver property)": [[139, "pywr.solvers.CythonGLPKSolver.use_unsafe_api", false]], "vals (pywr.solvers.cython_glpk.aggnodefactordata attribute)": [[139, "pywr.solvers.cython_glpk.AggNodeFactorData.vals", false]], "virtualstorage (class in pywr.nodes)": [[26, "pywr.nodes.VirtualStorage", false]], "weeklyprofileparameter (class in pywr.parameters)": [[84, "pywr.parameters.WeeklyProfileParameter", false]], "weightedaverageprofileparameter (class in pywr.parameters)": [[85, "pywr.parameters.WeightedAverageProfileParameter", false]]}, "objects": {"pywr": [[136, 2, 0, "-", "optimisation"], [139, 2, 0, "-", "solvers"]], "pywr.core": [[0, 0, 1, "", "Scenario"], [1, 0, 1, "", "ScenarioCollection"], [2, 0, 1, "", "ScenarioIndex"], [3, 0, 1, "", "Timestep"]], "pywr.core.Scenario": [[0, 1, 1, "", "__init__"]], "pywr.core.ScenarioCollection": [[1, 1, 1, "", "__init__"]], "pywr.core.ScenarioIndex": [[2, 1, 1, "", "__init__"]], "pywr.core.Timestep": [[3, 1, 1, "", "__init__"]], "pywr.domains.river": [[4, 0, 1, "", "Catchment"], [5, 0, 1, "", "Reservoir"], [6, 0, 1, "", "River"], [7, 0, 1, "", "RiverGauge"], [8, 0, 1, "", "RiverSplit"], [9, 0, 1, "", "RiverSplitWithGauge"]], "pywr.domains.river.Catchment": [[4, 1, 1, "", "__init__"]], "pywr.domains.river.Reservoir": [[5, 1, 1, "", "__init__"]], "pywr.domains.river.River": [[6, 1, 1, "", "__init__"]], "pywr.domains.river.RiverGauge": [[7, 1, 1, "", "__init__"]], "pywr.domains.river.RiverSplit": [[8, 1, 1, "", "__init__"]], "pywr.domains.river.RiverSplitWithGauge": [[9, 1, 1, "", "__init__"]], "pywr.nodes": [[10, 0, 1, "", "AggregatedNode"], [11, 0, 1, "", "AggregatedStorage"], [12, 0, 1, "", "AnnualVirtualStorage"], [13, 0, 1, "", "BreakLink"], [14, 0, 1, "", "DelayNode"], [15, 0, 1, "", "Input"], [16, 0, 1, "", "Link"], [17, 0, 1, "", "LossLink"], [18, 0, 1, "", "MonthlyVirtualStorage"], [19, 0, 1, "", "MultiSplitLink"], [20, 0, 1, "", "Node"], [21, 0, 1, "", "Output"], [22, 0, 1, "", "PiecewiseLink"], [23, 0, 1, "", "RollingVirtualStorage"], [24, 0, 1, "", "SeasonalVirtualStorage"], [25, 0, 1, "", "Storage"], [26, 0, 1, "", "VirtualStorage"]], "pywr.nodes.AggregatedNode": [[10, 1, 1, "", "__init__"]], "pywr.nodes.AggregatedStorage": [[11, 1, 1, "", "__init__"]], "pywr.nodes.AnnualVirtualStorage": [[12, 1, 1, "", "__init__"]], "pywr.nodes.BreakLink": [[13, 1, 1, "", "__init__"]], "pywr.nodes.DelayNode": [[14, 1, 1, "", "__init__"]], "pywr.nodes.Input": [[15, 1, 1, "", "__init__"]], "pywr.nodes.Link": [[16, 1, 1, "", "__init__"]], "pywr.nodes.LossLink": [[17, 1, 1, "", "__init__"]], "pywr.nodes.MonthlyVirtualStorage": [[18, 1, 1, "", "__init__"]], "pywr.nodes.MultiSplitLink": [[19, 1, 1, "", "__init__"]], "pywr.nodes.Node": [[20, 1, 1, "", "__init__"]], "pywr.nodes.Output": [[21, 1, 1, "", "__init__"]], "pywr.nodes.PiecewiseLink": [[22, 1, 1, "", "__init__"]], "pywr.nodes.RollingVirtualStorage": [[23, 1, 1, "", "__init__"]], "pywr.nodes.SeasonalVirtualStorage": [[24, 1, 1, "", "__init__"]], "pywr.nodes.Storage": [[25, 1, 1, "", "__init__"]], "pywr.nodes.VirtualStorage": [[26, 1, 1, "", "__init__"]], "pywr.optimisation": [[136, 0, 1, "", "BaseOptimisationWrapper"], [136, 0, 1, "", "ModelCache"], [136, 4, 1, "", "cache_constraints"], [136, 4, 1, "", "cache_objectives"], [136, 4, 1, "", "cache_variable_parameters"], [136, 4, 1, "", "clear_global_model_cache"], [136, 2, 0, "-", "pygmo"]], "pywr.optimisation.BaseOptimisationWrapper": [[136, 1, 1, "", "customise_model"], [136, 1, 1, "", "make_model"], [136, 3, 1, "", "model"], [136, 3, 1, "", "model_constraints"], [136, 3, 1, "", "model_objectives"], [136, 3, 1, "", "model_variable_map"], [136, 3, 1, "", "model_variables"]], "pywr.optimisation.pygmo": [[136, 0, 1, "", "PygmoWrapper"]], "pywr.optimisation.pygmo.PygmoWrapper": [[136, 1, 1, "", "fitness"], [136, 1, 1, "", "get_bounds"], [136, 1, 1, "", "get_nec"], [136, 1, 1, "", "get_nic"], [136, 1, 1, "", "get_nobj"]], "pywr.parameters": [[27, 0, 1, "", "AbstractThresholdParameter"], [28, 0, 1, "", "AggregatedIndexParameter"], [29, 0, 1, "", "AggregatedParameter"], [30, 0, 1, "", "AnnualHarmonicSeriesParameter"], [31, 0, 1, "", "ArrayIndexedParameter"], [32, 0, 1, "", "ArrayIndexedScenarioMonthlyFactorsParameter"], [33, 0, 1, "", "ArrayIndexedScenarioParameter"], [34, 0, 1, "", "BinaryStepParameter"], [35, 0, 1, "", "ConstantParameter"], [36, 0, 1, "", "ConstantScenarioIndexParameter"], [37, 0, 1, "", "ConstantScenarioParameter"], [38, 0, 1, "", "CurrentOrdinalDayThresholdParameter"], [39, 0, 1, "", "CurrentYearThresholdParameter"], [40, 0, 1, "", "DailyProfileParameter"], [41, 0, 1, "", "DataFrameParameter"], [42, 0, 1, "", "DeficitParameter"], [43, 0, 1, "", "DiscountFactorParameter"], [44, 0, 1, "", "DivisionParameter"], [45, 0, 1, "", "FlowDelayParameter"], [46, 0, 1, "", "FlowParameter"], [47, 0, 1, "", "HydropowerTargetParameter"], [48, 0, 1, "", "IndexParameter"], [49, 0, 1, "", "IndexedArrayParameter"], [50, 0, 1, "", "InterpolatedFlowParameter"], [51, 0, 1, "", "InterpolatedParameter"], [52, 0, 1, "", "InterpolatedQuadratureParameter"], [53, 0, 1, "", "InterpolatedVolumeParameter"], [54, 0, 1, "", "LogisticParameter"], [55, 0, 1, "", "MaxParameter"], [56, 0, 1, "", "MinParameter"], [57, 0, 1, "", "MonthlyProfileParameter"], [58, 0, 1, "", "MultipleThresholdIndexParameter"], [59, 0, 1, "", "MultipleThresholdParameterIndexParameter"], [60, 0, 1, "", "NegativeMaxParameter"], [61, 0, 1, "", "NegativeMinParameter"], [62, 0, 1, "", "NegativeParameter"], [63, 0, 1, "", "NodeThresholdParameter"], [64, 0, 1, "", "OffsetParameter"], [65, 0, 1, "", "OtherModelIndexParameterValueIndexParameter"], [66, 0, 1, "", "OtherModelNodeFlowParameter"], [67, 0, 1, "", "OtherModelNodeStorageParameter"], [68, 0, 1, "", "OtherModelParameterValueParameter"], [69, 0, 1, "", "Parameter"], [70, 0, 1, "", "ParameterThresholdParameter"], [71, 0, 1, "", "PiecewiseIntegralParameter"], [72, 0, 1, "", "RbfProfileParameter"], [73, 0, 1, "", "RecorderThresholdParameter"], [74, 0, 1, "", "RectifierParameter"], [75, 0, 1, "", "RollingMeanFlowNodeParameter"], [76, 0, 1, "", "ScenarioDailyProfileParameter"], [77, 0, 1, "", "ScenarioMonthlyProfileParameter"], [78, 0, 1, "", "ScenarioWeeklyProfileParameter"], [79, 0, 1, "", "ScenarioWrapperParameter"], [80, 0, 1, "", "StorageParameter"], [81, 0, 1, "", "StorageThresholdParameter"], [82, 0, 1, "", "TablesArrayParameter"], [83, 0, 1, "", "UniformDrawdownProfileParameter"], [84, 0, 1, "", "WeeklyProfileParameter"], [85, 0, 1, "", "WeightedAverageProfileParameter"]], "pywr.parameters.AbstractThresholdParameter": [[27, 1, 1, "", "__init__"]], "pywr.parameters.AggregatedIndexParameter": [[28, 1, 1, "", "__init__"]], "pywr.parameters.AggregatedParameter": [[29, 1, 1, "", "__init__"]], "pywr.parameters.AnnualHarmonicSeriesParameter": [[30, 1, 1, "", "__init__"]], "pywr.parameters.ArrayIndexedParameter": [[31, 1, 1, "", "__init__"]], "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter": [[32, 1, 1, "", "__init__"]], "pywr.parameters.ArrayIndexedScenarioParameter": [[33, 1, 1, "", "__init__"]], "pywr.parameters.BinaryStepParameter": [[34, 1, 1, "", "__init__"]], "pywr.parameters.ConstantParameter": [[35, 1, 1, "", "__init__"]], "pywr.parameters.ConstantScenarioIndexParameter": [[36, 1, 1, "", "__init__"]], "pywr.parameters.ConstantScenarioParameter": [[37, 1, 1, "", "__init__"]], "pywr.parameters.CurrentOrdinalDayThresholdParameter": [[38, 1, 1, "", "__init__"]], "pywr.parameters.CurrentYearThresholdParameter": [[39, 1, 1, "", "__init__"]], "pywr.parameters.DailyProfileParameter": [[40, 1, 1, "", "__init__"]], "pywr.parameters.DataFrameParameter": [[41, 1, 1, "", "__init__"]], "pywr.parameters.DeficitParameter": [[42, 1, 1, "", "__init__"]], "pywr.parameters.DiscountFactorParameter": [[43, 1, 1, "", "__init__"]], "pywr.parameters.DivisionParameter": [[44, 1, 1, "", "__init__"]], "pywr.parameters.FlowDelayParameter": [[45, 1, 1, "", "__init__"]], "pywr.parameters.FlowParameter": [[46, 1, 1, "", "__init__"]], "pywr.parameters.HydropowerTargetParameter": [[47, 1, 1, "", "__init__"]], "pywr.parameters.IndexParameter": [[48, 1, 1, "", "__init__"]], "pywr.parameters.IndexedArrayParameter": [[49, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedFlowParameter": [[50, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedParameter": [[51, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedQuadratureParameter": [[52, 1, 1, "", "__init__"]], "pywr.parameters.InterpolatedVolumeParameter": [[53, 1, 1, "", "__init__"]], "pywr.parameters.LogisticParameter": [[54, 1, 1, "", "__init__"]], "pywr.parameters.MaxParameter": [[55, 1, 1, "", "__init__"]], "pywr.parameters.MinParameter": [[56, 1, 1, "", "__init__"]], "pywr.parameters.MonthlyProfileParameter": [[57, 1, 1, "", "__init__"]], "pywr.parameters.MultipleThresholdIndexParameter": [[58, 1, 1, "", "__init__"]], "pywr.parameters.MultipleThresholdParameterIndexParameter": [[59, 1, 1, "", "__init__"]], "pywr.parameters.NegativeMaxParameter": [[60, 1, 1, "", "__init__"]], "pywr.parameters.NegativeMinParameter": [[61, 1, 1, "", "__init__"]], "pywr.parameters.NegativeParameter": [[62, 1, 1, "", "__init__"]], "pywr.parameters.NodeThresholdParameter": [[63, 1, 1, "", "__init__"]], "pywr.parameters.OffsetParameter": [[64, 1, 1, "", "__init__"]], "pywr.parameters.OtherModelIndexParameterValueIndexParameter": [[65, 1, 1, "", "__init__"]], "pywr.parameters.OtherModelNodeFlowParameter": [[66, 1, 1, "", "__init__"]], "pywr.parameters.OtherModelNodeStorageParameter": [[67, 1, 1, "", "__init__"]], "pywr.parameters.OtherModelParameterValueParameter": [[68, 1, 1, "", "__init__"]], "pywr.parameters.Parameter": [[69, 1, 1, "", "__init__"]], "pywr.parameters.ParameterThresholdParameter": [[70, 1, 1, "", "__init__"]], "pywr.parameters.PiecewiseIntegralParameter": [[71, 1, 1, "", "__init__"]], "pywr.parameters.RbfProfileParameter": [[72, 1, 1, "", "__init__"]], "pywr.parameters.RecorderThresholdParameter": [[73, 1, 1, "", "__init__"]], "pywr.parameters.RectifierParameter": [[74, 1, 1, "", "__init__"]], "pywr.parameters.RollingMeanFlowNodeParameter": [[75, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioDailyProfileParameter": [[76, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioMonthlyProfileParameter": [[77, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioWeeklyProfileParameter": [[78, 1, 1, "", "__init__"]], "pywr.parameters.ScenarioWrapperParameter": [[79, 1, 1, "", "__init__"]], "pywr.parameters.StorageParameter": [[80, 1, 1, "", "__init__"]], "pywr.parameters.StorageThresholdParameter": [[81, 1, 1, "", "__init__"]], "pywr.parameters.TablesArrayParameter": [[82, 1, 1, "", "__init__"]], "pywr.parameters.UniformDrawdownProfileParameter": [[83, 1, 1, "", "__init__"]], "pywr.parameters.WeeklyProfileParameter": [[84, 1, 1, "", "__init__"]], "pywr.parameters.WeightedAverageProfileParameter": [[85, 1, 1, "", "__init__"]], "pywr.parameters.control_curves": [[86, 0, 1, "", "BaseControlCurveParameter"], [87, 0, 1, "", "ControlCurveIndexParameter"], [88, 0, 1, "", "ControlCurveInterpolatedParameter"], [89, 0, 1, "", "ControlCurveParameter"], [90, 0, 1, "", "ControlCurvePiecewiseInterpolatedParameter"]], "pywr.parameters.control_curves.BaseControlCurveParameter": [[86, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurveIndexParameter": [[87, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurveInterpolatedParameter": [[88, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurveParameter": [[89, 1, 1, "", "__init__"]], "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter": [[90, 1, 1, "", "__init__"]], "pywr.recorders": [[91, 0, 1, "", "AggregatedRecorder"], [92, 0, 1, "", "Aggregator"], [93, 0, 1, "", "AnnualCountIndexParameterRecorder"], [94, 0, 1, "", "AnnualCountIndexThresholdRecorder"], [95, 0, 1, "", "AnnualTotalFlowRecorder"], [96, 0, 1, "", "CSVRecorder"], [97, 0, 1, "", "DeficitFrequencyNodeRecorder"], [98, 0, 1, "", "FlowDurationCurveDeviationRecorder"], [99, 0, 1, "", "FlowDurationCurveRecorder"], [100, 0, 1, "", "GaussianKDEStorageRecorder"], [101, 0, 1, "", "HydropowerRecorder"], [102, 0, 1, "", "IndexParameterRecorder"], [103, 0, 1, "", "MeanFlowNodeRecorder"], [104, 0, 1, "", "MeanParameterRecorder"], [105, 0, 1, "", "MinimumThresholdVolumeStorageRecorder"], [106, 0, 1, "", "MinimumVolumeStorageRecorder"], [107, 0, 1, "", "NodeRecorder"], [108, 0, 1, "", "NormalisedGaussianKDEStorageRecorder"], [109, 0, 1, "", "NumpyArrayAreaRecorder"], [110, 0, 1, "", "NumpyArrayDailyProfileParameterRecorder"], [111, 0, 1, "", "NumpyArrayIndexParameterRecorder"], [112, 0, 1, "", "NumpyArrayLevelRecorder"], [113, 0, 1, "", "NumpyArrayNodeCurtailmentRatioRecorder"], [114, 0, 1, "", "NumpyArrayNodeDeficitRecorder"], [115, 0, 1, "", "NumpyArrayNodeRecorder"], [116, 0, 1, "", "NumpyArrayNodeSuppliedRatioRecorder"], [117, 0, 1, "", "NumpyArrayParameterRecorder"], [118, 0, 1, "", "NumpyArrayStorageRecorder"], [119, 0, 1, "", "ParameterRecorder"], [120, 0, 1, "", "Recorder"], [121, 0, 1, "", "RollingMeanFlowNodeRecorder"], [122, 0, 1, "", "RollingWindowParameterRecorder"], [123, 0, 1, "", "SeasonalFlowDurationCurveRecorder"], [124, 0, 1, "", "StorageDurationCurveRecorder"], [125, 0, 1, "", "StorageRecorder"], [126, 0, 1, "", "TablesRecorder"], [127, 0, 1, "", "TimestepCountIndexParameterRecorder"], [128, 0, 1, "", "TotalDeficitNodeRecorder"], [129, 0, 1, "", "TotalFlowNodeRecorder"], [130, 0, 1, "", "TotalHydroEnergyRecorder"], [131, 0, 1, "", "TotalParameterRecorder"]], "pywr.recorders.AggregatedRecorder": [[91, 1, 1, "", "__init__"]], "pywr.recorders.Aggregator": [[92, 1, 1, "", "__init__"]], "pywr.recorders.AnnualCountIndexParameterRecorder": [[93, 1, 1, "", "__init__"]], "pywr.recorders.AnnualCountIndexThresholdRecorder": [[94, 1, 1, "", "__init__"]], "pywr.recorders.AnnualTotalFlowRecorder": [[95, 1, 1, "", "__init__"]], "pywr.recorders.CSVRecorder": [[96, 1, 1, "", "__init__"]], "pywr.recorders.DeficitFrequencyNodeRecorder": [[97, 1, 1, "", "__init__"]], "pywr.recorders.FlowDurationCurveDeviationRecorder": [[98, 1, 1, "", "__init__"]], "pywr.recorders.FlowDurationCurveRecorder": [[99, 1, 1, "", "__init__"]], "pywr.recorders.GaussianKDEStorageRecorder": [[100, 1, 1, "", "__init__"]], "pywr.recorders.HydropowerRecorder": [[101, 1, 1, "", "__init__"]], "pywr.recorders.IndexParameterRecorder": [[102, 1, 1, "", "__init__"]], "pywr.recorders.MeanFlowNodeRecorder": [[103, 1, 1, "", "__init__"]], "pywr.recorders.MeanParameterRecorder": [[104, 1, 1, "", "__init__"]], "pywr.recorders.MinimumThresholdVolumeStorageRecorder": [[105, 1, 1, "", "__init__"]], "pywr.recorders.MinimumVolumeStorageRecorder": [[106, 1, 1, "", "__init__"]], "pywr.recorders.NodeRecorder": [[107, 1, 1, "", "__init__"]], "pywr.recorders.NormalisedGaussianKDEStorageRecorder": [[108, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayAreaRecorder": [[109, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayDailyProfileParameterRecorder": [[110, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayIndexParameterRecorder": [[111, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayLevelRecorder": [[112, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder": [[113, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeDeficitRecorder": [[114, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeRecorder": [[115, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder": [[116, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayParameterRecorder": [[117, 1, 1, "", "__init__"]], "pywr.recorders.NumpyArrayStorageRecorder": [[118, 1, 1, "", "__init__"]], "pywr.recorders.ParameterRecorder": [[119, 1, 1, "", "__init__"]], "pywr.recorders.Recorder": [[120, 1, 1, "", "__init__"]], "pywr.recorders.RollingMeanFlowNodeRecorder": [[121, 1, 1, "", "__init__"]], "pywr.recorders.RollingWindowParameterRecorder": [[122, 1, 1, "", "__init__"]], "pywr.recorders.SeasonalFlowDurationCurveRecorder": [[123, 1, 1, "", "__init__"]], "pywr.recorders.StorageDurationCurveRecorder": [[124, 1, 1, "", "__init__"]], "pywr.recorders.StorageRecorder": [[125, 1, 1, "", "__init__"]], "pywr.recorders.TablesRecorder": [[126, 1, 1, "", "__init__"]], "pywr.recorders.TimestepCountIndexParameterRecorder": [[127, 1, 1, "", "__init__"]], "pywr.recorders.TotalDeficitNodeRecorder": [[128, 1, 1, "", "__init__"]], "pywr.recorders.TotalFlowNodeRecorder": [[129, 1, 1, "", "__init__"]], "pywr.recorders.TotalHydroEnergyRecorder": [[130, 1, 1, "", "__init__"]], "pywr.recorders.TotalParameterRecorder": [[131, 1, 1, "", "__init__"]], "pywr.solvers": [[139, 0, 1, "", "CythonGLPKEdgeSolver"], [139, 0, 1, "", "CythonGLPKSolver"], [139, 0, 1, "", "NullSolver"], [139, 0, 1, "", "Solver"], [139, 2, 0, "-", "cython_glpk"]], "pywr.solvers.CythonGLPKEdgeSolver": [[139, 1, 1, "", "dump_glpk"], [139, 1, 1, "", "dump_lp"], [139, 1, 1, "", "dump_mps"], [139, 5, 1, "", "name"], [139, 1, 1, "", "reset"], [139, 3, 1, "", "retry_solve"], [139, 3, 1, "", "set_fixed_costs_once"], [139, 3, 1, "", "set_fixed_factors_once"], [139, 3, 1, "", "set_fixed_flows_once"], [139, 3, 1, "", "settings"], [139, 1, 1, "", "setup"], [139, 1, 1, "", "solve"], [139, 3, 1, "", "stats"], [139, 3, 1, "", "use_presolve"], [139, 3, 1, "", "use_unsafe_api"]], "pywr.solvers.CythonGLPKSolver": [[139, 1, 1, "", "dump_glpk"], [139, 1, 1, "", "dump_lp"], [139, 1, 1, "", "dump_mps"], [139, 5, 1, "", "name"], [139, 1, 1, "", "reset"], [139, 3, 1, "", "retry_solve"], [139, 3, 1, "", "routes"], [139, 3, 1, "", "routes_flows_array"], [139, 3, 1, "", "save_routes_flows"], [139, 3, 1, "", "set_fixed_costs_once"], [139, 3, 1, "", "set_fixed_factors_once"], [139, 3, 1, "", "set_fixed_flows_once"], [139, 3, 1, "", "settings"], [139, 1, 1, "", "setup"], [139, 1, 1, "", "solve"], [139, 3, 1, "", "stats"], [139, 3, 1, "", "use_presolve"], [139, 3, 1, "", "use_unsafe_api"]], "pywr.solvers.NullSolver": [[139, 5, 1, "", "name"], [139, 1, 1, "", "reset"], [139, 1, 1, "", "setup"], [139, 1, 1, "", "solve"]], "pywr.solvers.Solver": [[139, 5, 1, "", "name"], [139, 1, 1, "", "reset"], [139, 3, 1, "", "settings"], [139, 1, 1, "", "setup"], [139, 1, 1, "", "solve"], [139, 3, 1, "", "stats"]], "pywr.solvers.cython_glpk": [[139, 0, 1, "", "AbstractNodeData"], [139, 0, 1, "", "AggNodeFactorData"], [139, 0, 1, "", "BasisManager"], [139, 0, 1, "", "CythonGLPKEdgeSolver"], [139, 0, 1, "", "CythonGLPKSolver"], [139, 6, 1, "", "GLPKError"], [139, 6, 1, "", "GLPKInternalError"], [139, 0, 1, "", "GLPKSolver"]], "pywr.solvers.cython_glpk.AbstractNodeData": [[139, 5, 1, "", "id"], [139, 5, 1, "", "in_edges"], [139, 5, 1, "", "is_link"], [139, 5, 1, "", "out_edges"], [139, 5, 1, "", "row"]], "pywr.solvers.cython_glpk.AggNodeFactorData": [[139, 5, 1, "", "ind_ptr"], [139, 5, 1, "", "inds"], [139, 5, 1, "", "node_ind"], [139, 5, 1, "", "row"], [139, 5, 1, "", "vals"]], "pywr.solvers.cython_glpk.CythonGLPKEdgeSolver": [[139, 1, 1, "", "reset"], [139, 5, 1, "", "retry_solve"], [139, 5, 1, "", "route_flows_arr"], [139, 1, 1, "", "setup"], [139, 1, 1, "", "solve"], [139, 5, 1, "", "stats"]], "pywr.solvers.cython_glpk.CythonGLPKSolver": [[139, 1, 1, "", "reset"], [139, 5, 1, "", "retry_solve"], [139, 5, 1, "", "route_flows_arr"], [139, 5, 1, "", "routes"], [139, 5, 1, "", "save_routes_flows"], [139, 1, 1, "", "setup"], [139, 1, 1, "", "solve"], [139, 5, 1, "", "stats"]], "pywr.solvers.cython_glpk.GLPKSolver": [[139, 1, 1, "", "dump_glpk"], [139, 1, 1, "", "dump_lp"], [139, 1, 1, "", "dump_mps"], [139, 1, 1, "", "reset"], [139, 5, 1, "", "set_fixed_costs_once"], [139, 5, 1, "", "set_fixed_factors_once"], [139, 5, 1, "", "set_fixed_flows_once"], [139, 1, 1, "", "set_solver_options"], [139, 1, 1, "", "setup"], [139, 1, 1, "", "solve"], [139, 5, 1, "", "use_presolve"], [139, 5, 1, "", "use_unsafe_api"]], "pywr.utils": [[140, 2, 0, "-", "bisect"]], "pywr.utils.bisect": [[140, 0, 1, "", "BisectionSearchModel"]], "pywr.utils.bisect.BisectionSearchModel": [[140, 1, 1, "", "run"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "module", "Python module"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:module", "3": "py:property", "4": "py:function", "5": "py:attribute", "6": "py:exception"}, "terms": {"": [28, 29, 42, 46, 50, 65, 68, 72, 79, 86, 88, 89, 90, 113, 116, 120, 142, 143, 145, 146, 147, 148, 149, 154, 155, 157], "0": [3, 6, 9, 12, 14, 15, 16, 18, 21, 22, 24, 25, 27, 34, 35, 41, 43, 45, 46, 47, 54, 55, 56, 57, 64, 71, 72, 74, 75, 82, 83, 88, 89, 90, 92, 96, 98, 99, 100, 101, 104, 105, 108, 113, 115, 116, 118, 120, 123, 124, 130, 131, 141, 142, 145, 146, 148, 149, 152, 155, 156, 157], "01": [145, 155, 157], "02": 145, "02110": 156, "03": 145, "0f75b3cee325d37112687d3d10596f44e0add374f4e40a1b6687912c05e65366": 145, "1": [0, 3, 8, 13, 18, 19, 22, 23, 25, 27, 30, 34, 35, 43, 47, 54, 72, 73, 74, 83, 88, 89, 90, 100, 101, 104, 105, 108, 113, 115, 116, 118, 120, 130, 131, 140, 141, 142, 145, 146, 148, 149, 153, 155, 156, 157], "10": [88, 141, 145, 146, 155, 156, 157], "100": [88, 89, 98, 99, 100, 123, 124, 141, 145, 157], "1000": [47, 101, 130, 155], "101": [100, 108], "1016": 156, "104": 142, "104635": 156, "11": 145, "12": [3, 12, 24, 32, 57, 83, 145, 149, 155, 157], "123": 149, "13": 145, "1301": 156, "14": 145, "140": 145, "15": 25, "17": [23, 153, 155], "19": [145, 156], "1910": 145, "1d": 92, "1e": [47, 101, 130], "1st": [76, 78, 94, 155], "2": [25, 30, 88, 141, 145, 146, 149, 155], "20": [88, 141, 145, 155], "200": [145, 155], "2014": 156, "2015": 157, "2016": 155, "2020": 156, "21": 145, "22": 145, "23": [145, 155], "24": 145, "242": [23, 26], "25": [142, 145], "25th": 142, "28": 145, "294": 145, "29th": 3, "2d": [90, 92], "2nd": 98, "2x": 146, "3": [13, 47, 88, 101, 130, 141, 145, 154, 155, 156, 157], "30": [88, 141, 145, 154], "31": [12, 24, 83, 155, 157], "316": 155, "318": 155, "31st": [94, 155], "32": 145, "34": 145, "343": 155, "359": 155, "365": [30, 84], "366": [3, 40, 76, 83], "366th": 72, "372": 155, "4": [142, 145, 155], "40": 141, "403": 145, "43": 145, "5": [6, 16, 88, 92, 141, 142, 145, 146], "50": [88, 141, 146, 155], "500": 146, "51": [3, 156], "52": [78, 84], "520": 145, "570": 145, "6": [13, 47, 54, 101, 130, 157], "60": 141, "64": 154, "7": [3, 84, 142, 154, 155], "700": 155, "75": 146, "790": 145, "8": [142, 145, 146], "80": 146, "8192": 145, "9": [13, 96, 145, 146, 155], "90": [9, 146], "920": 145, "930": 145, "95": [92, 146], "99999": 148, "9x": 146, "A": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 33, 36, 37, 40, 47, 72, 76, 78, 88, 89, 90, 92, 95, 96, 100, 101, 103, 108, 115, 126, 129, 130, 136, 139, 140, 141, 142, 143, 146, 148, 152, 153, 154, 155, 156], "As": [9, 145, 149, 154, 155, 157], "At": [23, 88, 146], "By": [1, 57, 89, 91, 100, 108, 126], "FOR": 156, "For": [24, 25, 79, 85, 91, 94, 95, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 142, 143, 145, 148, 149, 151, 155], "If": [0, 13, 17, 19, 23, 25, 26, 27, 41, 47, 57, 72, 75, 82, 88, 89, 90, 94, 98, 100, 101, 108, 113, 116, 120, 126, 130, 131, 140, 142, 145, 147, 149, 151, 154, 157], "In": [13, 16, 25, 27, 72, 88, 89, 141, 143, 145, 146, 147, 148, 149, 151, 154, 155, 157], "It": [2, 8, 13, 29, 42, 47, 79, 83, 96, 100, 101, 108, 126, 130, 143, 145, 147, 148, 149, 153, 154, 155], "Its": 28, "No": 154, "Not": 155, "On": 27, "One": [27, 151], "Such": 143, "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 44, 45, 46, 47, 54, 55, 56, 57, 62, 64, 71, 72, 74, 75, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 130, 131, 135, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 154, 155, 157], "There": [17, 141, 142, 148, 149, 154, 155], "These": [25, 40, 46, 80, 85, 88, 89, 90, 91, 92, 120, 143, 147, 148, 149, 151, 154], "To": [145, 146, 148, 149, 154], "With": 110, "__init__": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 148, 149, 155], "_after_": 148, "_core": [41, 149], "_default_decod": 155, "_node": 149, "_paramet": 149, "_v_attr": 126, "_valu": 149, "_volume_remain": 149, "_w": 155, "a5c4032e2d8f5205ca99dedcfa4cd18": 145, "a_n": 30, "abil": 148, "about": [25, 155, 157], "abov": [5, 9, 13, 19, 89, 98, 142, 145, 149, 153, 154], "above_curve_cost": 5, "absolut": [23, 25, 26, 80, 118], "abstract": [9, 20, 141], "abstractnod": [58, 63, 70, 98, 99, 107, 115, 123], "abstractnodedata": 139, "abstractstorag": [80, 81, 86, 124, 125], "accept": [28, 29, 92], "access": [25, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 138, 145, 149, 157], "account": [100, 108], "achiev": [142, 145], "across": [14, 19, 23, 24, 31, 45, 72, 79, 91, 92, 95, 98, 99, 123, 124, 126], "activ": [24, 34, 54, 74, 132], "actual": [0, 20, 42, 47, 98, 114, 146, 148, 155], "actual_flow": [113, 114, 116], "ad": [19, 28, 29, 141, 147, 149], "add": [145, 148, 149, 154, 157], "addit": [5, 8, 9, 19, 72, 92, 96, 144, 147, 148, 154, 155], "addition": 155, "address": 145, "admin": 154, "advanc": 148, "advantag": 143, "advis": 145, "affect": [23, 26], "aforement": 92, "after": [17, 18, 41, 42, 45, 82, 101, 140, 148], "afterward": 83, "ag": 9, "against": [58, 59, 94, 98, 143], "agg": 142, "agg_func": [28, 29, 91, 98, 99, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 142, 146], "aggnodefactordata": 139, "aggreg": [10, 11, 28, 29, 91, 98, 99, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 139, 144, 146, 148, 149, 153], "aggregated_valu": [91, 100, 108, 120], "aggregatedindexparamet": 142, "aggregatednod": [19, 141, 148], "aggregatedparamet": [55, 56, 64, 142, 146, 149], "algorithm": [120, 140, 145], "align": [41, 82, 152], "all": [1, 14, 17, 20, 28, 31, 45, 86, 96, 100, 108, 120, 126, 137, 138, 139, 140, 141, 144, 145, 148, 149, 154, 157], "alloc": [114, 139, 143, 149, 153], "allow": [2, 23, 26, 89, 91, 94, 141, 149], "allow_isol": 148, "along": 156, "alongsid": 72, "also": [94, 126, 141, 143, 145, 149, 154, 155], "alter": 2, "altern": [1, 42, 154, 155], "although": [145, 154], "alwai": [3, 72, 145], "amount": [4, 145, 149], "amplitud": 30, "an": [1, 2, 4, 9, 10, 11, 14, 17, 19, 20, 22, 23, 30, 31, 32, 33, 34, 36, 37, 40, 48, 49, 54, 57, 58, 59, 72, 74, 80, 83, 86, 87, 89, 91, 93, 96, 98, 99, 100, 101, 104, 108, 110, 111, 120, 123, 124, 126, 127, 131, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 154, 155, 157], "anaconda": 153, "analysi": [0, 126], "ani": [4, 14, 15, 17, 21, 24, 25, 28, 45, 46, 75, 80, 88, 90, 94, 105, 120, 141, 144, 147, 156, 157], "annual": [12, 30, 40, 76, 78, 83, 100, 108, 110, 132, 146], "annualvirtualstorag": 83, "anoth": [0, 9, 19, 44, 51, 52, 55, 56, 62, 64, 65, 66, 67, 68, 145, 148, 155], "another_paramet": 142, "anyth": [149, 157], "api": [142, 153, 155], "appear": [72, 148], "appli": [17, 23, 24, 41, 57, 64, 72, 82, 92, 95, 104, 131, 141, 145, 146, 155], "applic": [143, 145], "approach": [1, 143, 154], "appropri": [145, 155], "appveyor": 154, "april": 24, "apt": 154, "ar": [0, 1, 2, 4, 5, 13, 14, 16, 17, 19, 20, 22, 23, 24, 25, 26, 31, 33, 36, 37, 40, 49, 72, 79, 85, 88, 89, 90, 91, 92, 98, 99, 120, 123, 124, 126, 134, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 154, 155, 157], "area": [25, 109], "aren": 149, "arg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 136, 139, 148], "arguabl": 142, "argument": [4, 49, 50, 52, 53, 72, 92, 94, 96, 98, 99, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 126, 131, 145, 147, 149, 154, 155], "arnott": 156, "around": 154, "arrai": [1, 2, 31, 32, 40, 49, 57, 71, 72, 76, 78, 82, 90, 92, 98, 99, 101, 123, 124, 126, 132, 139, 146, 149], "arrang": 148, "array_lik": [30, 50, 52, 53, 57, 72, 89], "arrayindexedscenariomonthlyfactorsparamet": [57, 77], "assert": 155, "assertionerror": 147, "associ": 155, "assum": [8, 9, 23, 57, 71, 94], "atkin": 156, "attach": [0, 17, 25, 82, 86, 126, 142, 148, 149], "attempt": [126, 147, 152], "attribtu": 25, "attribut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 146, 148, 149], "august": 146, "author": [145, 155], "automat": [41, 145, 148, 149, 154], "avaialbl": 154, "avail": [14, 41, 45, 82, 142, 145, 148, 149, 154], "averag": [83, 85], "avoid": [22, 149, 155], "awar": 79, "axi": [92, 98, 99, 123, 124], "b": [13, 141, 149, 152], "back": 156, "backward": [41, 82], "balanc": [148, 152], "base": [2, 3, 20, 23, 27, 33, 43, 48, 49, 57, 58, 59, 72, 79, 86, 119, 120, 132, 136, 139, 140, 146, 148, 149, 151], "base_year": 43, "baseclass": 139, "basecontrolcurveparamet": 89, "baselin": [32, 142, 146], "basenod": [20, 157], "baseoptimisationwrapp": 136, "basi": [72, 91], "basic": [120, 144, 148, 151, 155], "basismanag": 139, "batch": 154, "becaus": [23, 25, 26, 143, 148, 157], "becom": 145, "been": [75, 147, 148, 149, 154, 157], "befor": [46, 75, 100, 108, 138, 145, 147, 148, 154], "begin": [3, 57, 146, 152], "behav": [10, 11, 25, 27, 28, 29, 92, 142], "behaviour": [23, 77, 141, 147, 148, 149], "behind": 154, "being": [14, 45, 88, 100, 108, 110, 146, 151], "belong": [8, 9, 13, 14, 17, 19, 20, 22, 146], "below": [5, 88, 89, 98, 100, 105, 108, 126, 141, 142, 143, 145, 146, 148, 149, 154, 155], "benchmark": 147, "benefit": [5, 13, 22, 25, 148, 151, 157], "best": 140, "better": 145, "between": [16, 19, 24, 47, 57, 79, 80, 88, 90, 98, 101, 114, 128, 130, 140, 141, 146, 149, 155], "beyond": [22, 149], "bi": [9, 19], "big": 155, "binari": [145, 153], "bisect": 132, "bisect_epsilon": 140, "bisect_paramet": 140, "bisectionsearchmodel": 140, "bit": 154, "blend": 141, "block": 145, "blog": 154, "bo": [9, 19], "bool": [3, 12, 18, 24, 27, 80, 100, 108, 118, 120, 126, 131, 139, 140], "boolean": 80, "boston": 156, "both": [23, 25, 26, 89, 91, 94, 120, 141, 142, 145, 149, 154, 155], "bottleneck": 13, "bottom": 90, "bound": [41, 47, 54, 57, 64, 71, 72, 74, 82, 89, 100, 108, 120, 136, 140], "boundari": [24, 72, 143, 145, 148], "bounded": [100, 108], "break": 22, "build": [142, 147, 154], "build_ext": 154, "built": 154, "c": [9, 13, 19, 141, 147, 149, 152, 154, 156], "c_include_path": 154, "cach": [136, 139], "cache_constraint": 136, "cache_object": 136, "cache_variable_paramet": 136, "calc_valu": 42, "calcul": [2, 17, 23, 30, 42, 43, 46, 47, 49, 53, 71, 72, 75, 80, 85, 95, 98, 99, 101, 103, 113, 114, 115, 116, 120, 121, 123, 124, 129, 130, 145, 146, 149], "calendar": 94, "call": [91, 120, 142, 147, 149, 155], "callabl": [28, 29, 91, 92, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120], "calucul": 50, "cambridg": 145, "cambridge_demand": 145, "can": [0, 1, 5, 9, 10, 11, 13, 24, 25, 28, 29, 41, 42, 46, 52, 57, 79, 80, 82, 85, 86, 88, 89, 91, 92, 94, 95, 100, 101, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 126, 129, 131, 135, 138, 141, 142, 143, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157], "cannot": [16, 149], "cap": 72, "capabl": 143, "captur": 157, "care": 19, "carrai": [82, 126], "carri": 148, "case": [8, 9, 27, 52, 145, 147, 148, 154], "cast": 89, "catch": 147, "catchment": [145, 148], "catchment_inflow": 155, "catchmod_outputs_v2": 155, "categori": 148, "caught": 147, "caus": [30, 72, 92, 147], "cc": 88, "cdef": 149, "cdot": 30, "central": 146, "certain": [0, 22], "cflag": 154, "chang": [22, 23, 25, 57, 143, 149], "channel": 154, "char": 155, "characteris": 148, "check": [147, 157], "child": [28, 29, 79, 142, 149], "children": [142, 149], "ci": 154, "cimport": 149, "circular": 149, "citat": 153, "cite": 156, "citi": 145, "cl": [148, 149], "clang": 154, "class": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 139, 140, 148, 149, 151, 153, 155], "classmethod": [148, 149], "clear": 136, "clear_global_model_cach": 136, "close": [82, 126], "co": 30, "code": [146, 154, 155], "coerc": 40, "collect": [1, 28, 29, 91, 154], "column": [145, 155], "com": 154, "combin": [1, 2, 42, 94, 95, 110, 126, 132, 141, 146, 147, 149], "comma": [145, 155], "command": [149, 154], "comment": 120, "commit_al": 148, "common": [137, 138, 142, 143, 145, 146, 148, 155], "commonli": 146, "compar": [27, 55, 56, 62, 64, 88, 90, 94, 98, 127, 142, 143, 147], "comparison": 145, "compat": [47, 101, 130], "compil": [149, 154], "complet": [23, 101], "complevel": 96, "complex": [91, 141, 142, 143, 147, 148, 149], "complib": 96, "complic": [146, 155], "compon": [120, 142, 146, 155], "compos": [13, 148], "composit": 14, "compound": [13, 22, 148], "compris": 30, "comput": [72, 92, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "concept": [144, 146], "conceptu": 19, "conda": 154, "conda_prefix": 154, "condit": [143, 145], "config": 154, "configur": 154, "confluenc": 6, "conform": 141, "confus": 154, "connect": [8, 9, 10, 11, 13, 14, 16, 19, 20, 22, 25, 141, 148, 155, 157], "consid": [89, 90, 148, 151, 156], "consist": [14, 40, 72], "constant": [14, 17, 31, 34, 36, 37, 45, 55, 56, 60, 61, 64, 142, 146, 149, 155], "constantparamet": [49, 85, 88, 89, 90, 142, 149], "constrain": [19, 120, 144, 148], "constraint": [6, 15, 16, 21, 24, 120, 140, 141, 143, 155, 157], "constraint_lower_bound": 120, "constraint_upper_bound": 120, "constructor": 126, "contain": [86, 92, 126, 135, 139, 143, 148, 155], "content": [132, 153, 155], "context": 147, "continu": 147, "contribut": 85, "control": [1, 5, 79, 86, 87, 88, 89, 90, 132, 142, 144, 145, 146, 149, 153], "control_curv": [5, 146], "controlcurveindex": 146, "controlcurveindexparamet": [48, 146], "convei": 148, "conveni": [8, 155], "convert": [47, 49, 75, 88, 90, 101, 130, 149], "cookbook": 153, "coordin": [50, 52, 53], "copi": 156, "copyright": 156, "core": [12, 23, 26, 58, 63, 70, 75, 81, 91, 94, 95, 98, 99, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 127, 131, 132, 139, 149, 151, 153, 154, 155, 157], "correct": [149, 154], "correspond": [19, 22, 57, 72, 88, 89, 92, 140, 146, 154, 155], "cosin": 30, "cost": [5, 7, 9, 13, 19, 22, 23, 25, 26, 88, 95, 103, 115, 129, 141, 145, 146, 147, 148, 155, 157], "could": [141, 142, 147, 148, 149, 157], "count": [94, 127], "count_nonzero": 92, "coupl": 132, "cover": 156, "cpdef": 149, "creat": [9, 16, 25, 57, 100, 108, 120, 126, 142, 143, 147, 148, 149, 151, 154, 155, 157], "create_directori": 126, "creation": 142, "criterion": 140, "critic": 145, "cryptic": 155, "csv": [96, 155], "csvfile": 96, "current": [3, 10, 11, 17, 23, 26, 34, 38, 39, 43, 46, 49, 53, 54, 57, 67, 74, 80, 81, 86, 89, 90, 139, 143, 145, 149, 155], "current_pc": 11, "curtail": 113, "curtailment_ratio": 113, "curv": [5, 79, 86, 87, 88, 89, 90, 98, 99, 123, 124, 132, 142, 144, 146, 149, 153], "custom": [92, 144, 146, 147, 151], "custom_paramet": 149, "customise_model": 136, "cython": [139, 154], "cython_glpk": 132, "cython_lpsolv": 132, "cythonglpkedgesolv": 139, "cythonglpksolv": 139, "d": [9, 13, 19, 141, 146], "d_": 146, "d_o": 13, "dai": [3, 12, 14, 23, 24, 27, 30, 45, 47, 57, 58, 72, 75, 83, 84, 94, 101, 110, 121, 126, 130, 131, 149, 155, 157], "daili": [23, 40, 57, 72, 76, 85, 110, 127, 145, 146, 155, 157], "dailyprofileparamet": [85, 88, 90], "data": [32, 41, 50, 52, 53, 79, 82, 94, 95, 96, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 126, 138, 139, 144, 147, 148, 149, 151, 153, 155, 157], "databas": [82, 126], "dataclass": 149, "datafram": [41, 101, 132, 145, 149, 155], "dataframeparamet": 145, "dataset": [41, 82, 145], "date": [24, 94, 145, 155], "datetim": 157, "dayofyear": 3, "dayofyear_index": 3, "days_of_year": 72, "dc1": 145, "debug": [139, 147, 153], "dec": [94, 145], "decemb": 155, "decim": 146, "decod": 155, "decreas": 25, "def": [148, 149], "default": [0, 1, 9, 12, 14, 15, 17, 18, 19, 20, 21, 23, 24, 25, 27, 34, 41, 45, 46, 47, 54, 55, 56, 57, 64, 72, 74, 89, 90, 91, 94, 96, 100, 101, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 126, 130, 131, 139, 140, 147, 154, 155, 157], "deficit": [42, 114, 132], "defin": [0, 1, 5, 25, 42, 57, 71, 72, 89, 92, 120, 126, 139, 140, 143, 145, 146, 148, 149, 155, 157], "definit": [79, 92, 120, 141, 145], "del": 148, "delai": [14, 45], "delta": [14, 47, 101, 130], "demand": [49, 141, 142, 143, 144, 148, 152, 153, 155, 157], "demand1": [25, 145], "demand2": [25, 145], "demand_baselin": 146, "demand_factor": 146, "demand_max_flow": 146, "demand_profil": 146, "demand_restriction_factor": 146, "demand_restriction_level": 146, "demand_saving_factor": 142, "demonstr": [149, 155], "denomin": 44, "denot": 120, "densiti": [47, 100, 101, 108, 130], "depend": [0, 17, 27, 38, 39, 63, 70, 73, 81, 90, 142, 144, 146, 153], "descend": [89, 137, 138], "describ": [0, 13, 146, 155], "descript": [120, 155], "design": 151, "desir": 145, "desktop": 155, "despit": 141, "destroi": 138, "detail": [142, 155, 156], "determin": [92, 120, 145, 146], "dev": 154, "develop": 153, "deviat": 98, "dict": [50, 52, 53, 72, 92, 126], "dictionari": [50, 52, 53, 72, 92], "differ": [0, 47, 57, 76, 77, 78, 79, 89, 91, 92, 98, 99, 101, 114, 123, 124, 128, 130, 143, 145, 148, 149, 155], "difficult": 147, "dimens": [76, 78, 92, 98], "direct": [120, 149, 155], "directli": [20, 22, 25, 92, 145, 155], "directori": [126, 154, 155], "dirti": 149, "disabl": [100, 108, 120], "disconnect": [16, 141], "discontinu": 30, "discount": 43, "discount_r": 43, "discuss": [143, 155], "disk": 145, "distanc": 120, "distribut": [8, 100, 108, 154, 156], "divid": 44, "dividend": 44, "divis": [14, 45], "divisor": 44, "do": [22, 79, 148, 151, 157], "document": [8, 9, 12, 72, 92, 142, 143, 145, 146, 149, 151, 157], "doe": [24, 42, 82, 101, 130, 139, 141, 142, 145, 147, 148], "doesn": [148, 157], "doi": 156, "domain": [22, 134], "don": 157, "done": [0, 148, 154], "doubl": [3, 27, 47, 71, 101, 120, 130, 149, 155], "double_s": 140, "downstream": [6, 8, 148], "drive": 154, "due": [22, 141], "dump_glpk": 139, "dump_lp": 139, "dump_mp": 139, "durat": [98, 99, 123, 124, 132], "dure": [1, 2, 19, 23, 24, 42, 64, 72, 104, 105, 106, 110, 114, 120, 130, 131, 140, 143, 145, 146, 154], "dyld_library_path": 154, "dynam": 149, "e": [0, 1, 4, 6, 9, 13, 16, 17, 19, 20, 25, 28, 29, 30, 42, 43, 89, 92, 95, 100, 103, 108, 110, 114, 115, 129, 141, 142, 143, 145, 146, 147, 148, 149, 155, 156], "e_o": 13, "each": [0, 2, 4, 12, 18, 19, 22, 23, 24, 43, 47, 57, 72, 76, 77, 78, 79, 85, 88, 89, 90, 94, 95, 98, 99, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 124, 126, 127, 130, 143, 145, 146, 148, 149, 152, 155], "earlier": [24, 147], "easier": 13, "easiest": [149, 154], "easili": 110, "edg": [16, 139, 141, 149, 153, 157], "effici": [47, 55, 56, 64, 85, 101, 130, 146], "either": [17, 23, 25, 26, 57, 85, 92, 120, 141, 147, 154, 156], "element": 149, "elev": [47, 101, 130], "els": [27, 148, 155], "elsewher": 146, "empti": [149, 157], "enabl": 147, "enclos": 155, "encount": 110, "encourag": 72, "end": [3, 83, 94, 100, 108, 126, 140, 146, 152, 155, 157], "end_dai": 24, "end_month": 24, "energi": [47, 101, 130], "energy_unit_convers": [47, 101, 130], "enforc": [17, 19, 24, 141], "enough": 142, "ensembl": [0, 1, 77, 79], "ensemble_nam": 0, "ensur": [140, 141, 147, 149], "enter": [47, 101, 130], "entir": [82, 147], "entitl": 156, "env": 155, "environ": [147, 154], "environment": 156, "envsoft": 156, "epsilon": [120, 140], "eq": 27, "equal": [17, 19, 23, 43, 51, 52, 72, 76, 78, 79, 85, 93, 105, 120, 141, 148, 157], "equat": [47, 101, 130, 146], "equival": [142, 146, 149], "error": [139, 140, 148, 149, 153], "error_on_infeas": 140, "estim": [100, 108], "etc": [92, 143], "evalu": [23, 25, 26, 27, 42, 142, 145, 149], "evapor": 142, "even": [23, 149, 156], "everi": [57, 72, 83, 126, 139, 149], "exactli": [14, 45, 149], "exampl": [24, 25, 49, 79, 88, 91, 92, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 141, 142, 143, 146, 148, 149, 151, 153, 154, 155], "exce": [94, 127, 141, 157], "exceed": 94, "excel": 145, "except": [72, 77, 126, 139, 146, 147, 149, 155], "exclud": 94, "exclude_month": 94, "exclus": 94, "execut": 1, "exist": [148, 149, 151], "expect": [19, 145, 146, 155], "explan": [142, 149], "explicit": 25, "explicitli": [79, 149, 157], "export": 154, "expos": 72, "express": 43, "extend": [143, 153], "extens": [19, 22, 100, 108, 145, 154], "extern": [98, 120, 144, 149, 153, 154, 155], "extra": [8, 9, 19], "extra_slot": [8, 9, 19], "f": [13, 30, 141, 145, 155], "f_o": 13, "fact": 155, "factor": [8, 9, 17, 19, 23, 26, 32, 43, 47, 49, 95, 101, 103, 104, 115, 129, 130, 131, 139, 141, 146, 157], "fail": 155, "failur": [97, 146], "fall": [98, 105], "fals": [3, 12, 18, 24, 27, 58, 59, 69, 80, 118, 120, 131, 139, 140], "fashion": [92, 151], "fast": [145, 153], "fault": 147, "fdc": [98, 99, 123, 124], "fdc_agg_func": [98, 99, 123], "feasibl": 140, "featur": 148, "feb": 145, "februari": 3, "few": [143, 149], "fifth": 156, "figur": 146, "file": [53, 82, 96, 98, 126, 132, 145, 154, 155], "filenam": [82, 126, 139, 145], "fill": 5, "filter": 126, "filter_kwd": 126, "final": [19, 92, 110, 140, 146, 157], "find": 140, "fine": 154, "finit": 149, "first": [19, 23, 25, 26, 27, 41, 46, 57, 72, 75, 82, 88, 89, 90, 91, 92, 126, 149, 154, 155, 157], "fit": [100, 108, 136, 156], "fix": [4, 8, 17, 19, 22, 141, 145], "flag": [120, 154], "flatten": [100, 108], "flaw": 148, "float": [4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 21, 23, 25, 26, 30, 34, 43, 45, 46, 47, 49, 54, 55, 56, 57, 58, 59, 62, 64, 72, 74, 75, 87, 88, 89, 90, 100, 101, 104, 115, 120, 130, 131, 140, 149], "float64": 149, "floor": 156, "flow": [4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 42, 45, 46, 47, 50, 58, 63, 66, 75, 95, 98, 99, 101, 103, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 126, 128, 129, 130, 132, 142, 143, 144, 145, 148, 149, 155, 157], "flow_during_timestep": 149, "flow_unit_convers": [47, 101, 130], "flow_weight": 10, "flowdelayparamet": 14, "flux": 131, "folder": 155, "follow": [19, 47, 54, 74, 101, 130, 138, 142, 145, 146, 149, 154, 156], "footnot": 153, "forc": [8, 9], "foreign": 149, "forest": 157, "forg": 154, "form": [13, 146, 151], "format": [144, 148, 149, 153, 157], "former": 1, "formul": 153, "formula": 145, "forward": [41, 82], "found": [140, 142, 155], "foundat": 156, "fourth": 148, "frac": 47, "frame": 152, "franklin": 156, "free": [153, 156], "frequenc": [23, 97, 100, 108], "from": [1, 3, 8, 9, 14, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 46, 47, 53, 65, 66, 67, 68, 71, 72, 80, 82, 83, 85, 89, 91, 94, 95, 96, 98, 100, 101, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 126, 130, 137, 138, 139, 141, 143, 145, 147, 148, 149, 153, 155, 157], "from_slot": 25, "front": 156, "full": [23, 88, 126, 146, 149], "func": [92, 142], "function": [4, 5, 6, 16, 19, 22, 28, 29, 30, 34, 54, 71, 72, 74, 91, 92, 98, 99, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 132, 135, 144, 145, 149, 151, 154], "fundament": [148, 155], "further": [146, 157], "futur": [143, 149], "g": [0, 6, 9, 16, 20, 28, 29, 42, 47, 92, 95, 100, 101, 103, 108, 110, 115, 129, 130, 142, 143, 145, 146, 147, 148, 149, 155], "gain": 142, "gap": 140, "gaug": [7, 9, 155], "gcc": 154, "ge": [27, 152], "gener": [2, 15, 21, 25, 47, 50, 53, 85, 89, 147, 149, 153, 156], "generalis": 153, "geometr": 22, "get": [139, 149, 154, 155, 157], "get_area": 25, "get_bound": 136, "get_index": 149, "get_level": 25, "get_nec": 136, "get_nic": 136, "get_nobj": 136, "get_valu": 149, "git": [145, 154], "github": 154, "give": [25, 42, 47, 101, 130, 146], "given": [0, 2, 5, 14, 18, 19, 23, 25, 26, 45, 46, 47, 55, 56, 57, 58, 59, 71, 72, 76, 77, 78, 79, 80, 82, 85, 92, 101, 123, 126, 130, 142, 145, 146, 155], "global": [2, 3], "global_id": [2, 149], "glpk": [139, 153, 154, 155], "glpkerror": [139, 147], "glpkinternalerror": [139, 147], "glpksolver": 139, "gnu": 156, "go": 145, "good": [149, 154], "gracefulli": 147, "gradient": 72, "grant": 156, "greater": [17, 19, 71, 93], "gross": 17, "groundwat": 155, "group": [141, 142], "growth": 54, "growth_rat": 54, "gt": 27, "guidanc": 151, "gw_flow": 155, "h": [47, 101, 130, 149, 156], "h5": 145, "h5file": [82, 126], "ha": [5, 17, 46, 94, 95, 101, 140, 145, 146, 147, 148, 149, 154, 155, 157], "hand": [71, 155], "handl": [82, 126, 142, 153], "hard": 141, "harmon": 30, "harou": 156, "hashlib": 145, "hashmismatcherror": 145, "hat": 146, "have": [6, 27, 42, 46, 75, 80, 84, 98, 126, 139, 140, 145, 147, 149, 151, 155, 156, 157], "haven": 157, "hdf": [82, 126], "hdf5": [132, 145], "head": [47, 101, 130], "header": 154, "help": 146, "helper": [136, 139], "here": [47, 101, 130], "hexdigest": 145, "hierarchi": 155, "high": 98, "higher": 23, "hire": 146, "hold": [1, 16, 149], "holder": 87, "homebrew": 154, "hope": 156, "host": 154, "how": [145, 146, 157], "howev": [1, 10, 11, 16, 147], "http": [154, 156], "hydro": 132, "hydrolog": 4, "hydropow": [47, 101, 130, 132], "hydropowerrecord": [47, 130], "hydropowertargetparamet": [101, 130], "hydrpow": 101, "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 37, 41, 42, 43, 45, 47, 49, 51, 52, 54, 55, 56, 57, 64, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 98, 100, 101, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 126, 130, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157], "id": 139, "ideal": 147, "identifi": [8, 9, 148], "idx": 155, "ignor": [23, 25, 26, 75, 120], "ignore_nan": 120, "illustr": [146, 148], "immedi": 23, "implement": [22, 23, 139, 143, 149], "impli": 156, "implicitli": 146, "import": [143, 145, 148, 149, 154, 155, 157], "impos": 146, "imposs": 23, "in_1": 148, "in_edg": 139, "inc": 156, "includ": [19, 94, 126, 141, 142, 143, 147, 149, 151, 154, 155, 156, 157], "include_from_dai": 94, "include_from_month": 94, "include_to_dai": 94, "include_to_month": 94, "inclus": 94, "increas": [19, 22, 25, 71], "increment": 89, "ind": 139, "ind_ptr": 139, "independ": [25, 72, 143], "index": [2, 3, 27, 28, 31, 32, 33, 41, 48, 49, 58, 59, 82, 87, 89, 96, 98, 126, 127, 132, 142, 146, 149], "index_col": [145, 155], "index_paramet": [49, 146], "indexedarrai": 146, "indexedarrayparamet": 48, "indexparamet": [28, 29, 36, 49, 93, 94, 102, 111, 127, 142, 146], "indic": [1, 2, 24, 89, 126], "indirect": 149, "indirectli": 145, "individu": [1, 32, 141, 142], "inf": [35, 57, 64, 72], "infin": 72, "inflow": [4, 23, 25, 26, 142, 148], "inform": [72, 111, 115, 117, 118, 120, 126, 143, 144, 155, 157], "inherit": [20, 139, 149], "init": 8, "initi": [12, 14, 18, 23, 24, 25, 26, 45, 75, 83, 148, 149, 155], "initial_flow": [14, 45, 75], "initial_month": 18, "initial_valu": [46, 73], "initial_volum": [23, 25, 26, 88, 155], "initial_volume_pc": [23, 25, 26], "initialis": [4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 149], "inlin": 155, "inplac": 154, "input": [4, 13, 14, 22, 25, 50, 53, 85, 141, 142, 147, 148, 151, 155, 157], "insid": [126, 155], "instal": [149, 153], "instanc": [0, 1, 2, 7, 10, 11, 16, 25, 47, 58, 59, 79, 87, 91, 95, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 130, 138, 149, 151, 155], "instanti": [2, 134], "instead": [12, 14, 18, 22, 23, 24, 25, 45, 57, 92, 120, 141, 145, 149, 154, 155], "instruct": 154, "int": [0, 2, 3, 12, 14, 18, 19, 23, 24, 41, 43, 45, 72, 75, 82, 83, 89, 93, 94, 96, 100, 108, 121, 122, 127, 139], "integ": [25, 72, 89, 92, 142, 146], "integr": [52, 71, 131], "intend": [8, 22, 42, 47, 83, 94, 120, 153], "intent": 9, "interest": 157, "interfac": [82, 147], "intermedi": [126, 155], "intern": [14, 17, 19, 25, 34, 40, 54, 74, 75, 89, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 147, 148], "interp1d": [50, 52, 53], "interp_dai": 57, "interp_kwarg": [50, 51, 52, 53], "interpol": [50, 51, 52, 53, 57, 72, 79, 88, 90, 132], "intersect": 94, "interv": [52, 54, 157], "invalid": 147, "invari": 156, "invers": 47, "is_connector": 148, "is_constraint": 120, "is_leap_year": 3, "is_link": 139, "is_object": 120, "is_vari": [69, 89], "isn": 157, "issu": [23, 26], "item": [19, 89, 126, 155], "iter": [0, 8, 9, 10, 11, 19, 22, 27, 28, 29, 33, 36, 37, 40, 49, 57, 58, 59, 71, 72, 76, 78, 79, 85, 86, 87, 88, 89, 91, 96, 126, 145], "iter_slot": 148, "iteration_limit": 139, "its": [5, 17, 19, 24, 34, 46, 54, 65, 66, 67, 68, 72, 74, 80, 142, 145, 148], "itself": [17, 47, 101, 130, 145], "j": 156, "jame": 156, "jan": [94, 145], "januari": [142, 155], "javascript": 155, "john": 155, "joshua": 156, "json": [142, 145, 148, 149, 153, 157], "julien": 30, "jupyt": 154, "just": [146, 149], "juyter": 135, "kde": [100, 108], "keep": [46, 154], "kei": [92, 143, 145, 155], "kernel": [100, 108], "keyerror": 155, "keyword": [4, 5, 50, 52, 53, 57, 72, 92, 96, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 131, 145, 147, 155], "kind": [92, 142, 145], "kwarg": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 136, 139, 140, 148, 149], "l": 154, "l0": 146, "l1": 146, "l2": 146, "lag": 154, "lake": 155, "lambda": [142, 145], "languag": 155, "larg": [0, 82, 145], "largest": 140, "last": [3, 19, 41, 57, 82, 84, 88, 90, 110, 122, 145, 155, 157], "later": [154, 156], "latter": [1, 92], "le": 27, "leak": 148, "leakag": [142, 148], "leakage_cost": 148, "leaki": 148, "leaky_pipe_model": 148, "leakypip": 148, "leap": [3, 30], "least": [47, 154], "len": [88, 90, 149], "length": [3, 8, 9, 19, 30, 33, 36, 37, 45, 57, 72, 76, 78, 85, 88, 89, 90, 98, 131], "leq": 152, "less": [8, 9, 23, 47, 105, 120, 140, 141, 149, 157], "let": [148, 157], "level": [25, 49, 89, 112, 136, 145, 146, 155], "level1": 146, "level2": 146, "lib": [154, 155], "libglpk": 154, "libgmp3": 154, "liblpsolve55": 154, "libm": 149, "librari": [96, 149, 151, 154], "library_inc": 154, "library_lib": 154, "licenc": [12, 23, 24, 83, 141, 149], "licenceparamet": 149, "licens": [141, 153], "like": [10, 11, 19, 22, 25, 27, 28, 29, 57, 72, 142, 147, 155], "likelihood": 146, "limit": [17, 22, 85, 157], "line": 155, "linear": [22, 104, 131, 139, 147, 148, 149, 152, 154], "linearli": [57, 88, 90], "link": [6, 13, 19, 22, 145, 148, 149, 155], "linker": 149, "linux": 153, "list": [10, 11, 19, 22, 23, 26, 28, 29, 88, 89, 90, 94, 95, 98, 139, 145, 146, 149, 154, 155], "liter": [17, 141], "littl": [42, 147], "ll": 157, "llvm": 154, "ln": 154, "lnk_1": 148, "lnk_n": 148, "load": [82, 98, 145, 147, 148, 149, 153, 157], "load_paramet": 149, "local": 145, "locat": 154, "logist": 54, "london": 145, "long": 157, "longer": 3, "look": [19, 41, 82, 145, 148], "lookup": 145, "loss": 17, "loss_factor": 17, "loss_factor_typ": 17, "losslessli": 155, "lost": 17, "low": 98, "lower": [23, 47, 52, 57, 64, 72, 90, 98, 100, 108, 120, 140, 146], "lower_bound": [34, 35, 54, 57, 64, 72, 74, 89], "lower_paramet": 52, "lower_target_fdc": 98, "lp": [13, 154], "lp_solv": 154, "lpsolv": 154, "lpsolve55": 139, "lt": 27, "m": [47, 101, 130], "ma": 156, "maco": 154, "made": [22, 142, 143, 155], "magic": 139, "mai": [1, 6, 19, 88, 90, 110, 145, 146, 147, 149, 154, 155], "mainli": 139, "major": 148, "make": [126, 148], "make_model": 136, "makedir": 126, "manag": [148, 154], "manchest": 156, "mani": [0, 79, 143, 145, 149, 151], "manual": [149, 154], "map": 92, "mar": 145, "march": 24, "mark": 120, "markup": 155, "match": [145, 149], "math": 149, "mathbf": 152, "mathrm": 152, "matplotlib": 154, "max": [17, 23, 28, 29, 92, 120, 144], "max_flow": [4, 6, 9, 13, 15, 16, 19, 21, 22, 25, 42, 47, 97, 113, 114, 116, 128, 141, 145, 146, 148, 149, 155, 157], "max_flow_oxford": 145, "max_output": [54, 74], "max_valu": 72, "max_volum": [23, 25, 26, 88, 89, 155], "maxim": [120, 152], "maximis": 120, "maximum": [6, 12, 15, 16, 18, 19, 21, 22, 23, 24, 25, 26, 54, 55, 60, 72, 74, 90, 142, 144, 148, 155, 157], "maxparamet": 144, "md5": 145, "mean": [22, 29, 30, 42, 75, 91, 92, 103, 104, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 144, 145, 146], "meant": 23, "mechan": [19, 89], "median": [92, 109, 111, 112, 113, 114, 115, 116, 117, 118, 144], "meet": 97, "member": [76, 78], "membership": 155, "memori": [82, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 138, 149], "memoryview": 139, "merchant": 156, "message_level": 139, "metaclass": [139, 148], "metadata": [126, 153, 157], "method": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 148, 149, 155, 157], "middl": 22, "might": [110, 145], "min": [17, 28, 29, 92, 120, 144], "min_flow": [4, 13, 15, 21, 47, 141, 148], "min_head": 47, "min_output": 74, "min_valu": 72, "min_volum": [23, 25, 26, 155], "mind": 149, "miniconda3": 155, "minim": [120, 147, 149, 153], "minimim": 149, "minimis": 120, "minimum": [7, 9, 15, 19, 21, 23, 25, 26, 47, 56, 61, 72, 90, 100, 106, 108, 140, 141, 142, 148, 155, 157], "minimum_vers": 157, "minparamet": 144, "minu": [30, 113], "minut": 154, "mirror": 72, "miss": 157, "mistak": 155, "mj": [47, 101, 130], "mode": [126, 154], "model": [0, 1, 2, 5, 8, 9, 10, 11, 13, 14, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 136, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 153, 156, 157], "model_constraint": 136, "model_object": 136, "model_vari": 136, "model_variable_map": 136, "modelcach": 136, "modifi": [25, 149, 154, 156], "modul": [132, 135, 145, 149, 155], "monoton": [19, 22, 71], "month": [3, 12, 18, 24, 32, 57, 83, 94, 123, 126, 146, 149], "monthli": [57, 77, 146, 155], "monthly_demand_profil": 142, "monthlyparamet": 142, "monthlyprofil": [145, 146, 155], "monthlyprofileparamet": [77, 85, 88, 90, 149], "more": [8, 9, 19, 55, 56, 64, 72, 84, 88, 89, 90, 110, 141, 142, 143, 146, 148, 149, 155, 156], "most": [24, 47, 143, 145, 148, 155], "mrf": [7, 9, 155], "mrf_cost": [7, 9, 155], "mrf_profil": 155, "msvc": 154, "much": 151, "multi": [89, 132], "multipl": [0, 6, 8, 22, 25, 32, 58, 59, 79, 87, 89, 91, 94, 126, 132, 140, 141, 143, 145, 149, 155], "multipli": [23, 26, 131, 146], "multisplitlink": [8, 9], "must": [8, 9, 17, 19, 28, 29, 30, 40, 57, 79, 89, 92, 94, 98, 99, 120, 123, 124, 140, 141, 145, 149, 154, 155], "my_model": 155, "myparamet": 149, "n": [22, 30, 75, 121, 122], "name": [0, 8, 9, 10, 11, 13, 14, 17, 19, 20, 22, 23, 25, 26, 75, 82, 92, 94, 95, 102, 104, 107, 119, 120, 121, 125, 126, 131, 139, 141, 142, 145, 146, 148, 149, 155, 157], "nan": [120, 147], "narrow": 140, "need": [2, 25, 98, 142, 145, 148, 149, 154, 155, 157], "neg": [5, 23, 25, 26, 41, 60, 61, 62, 72, 82, 142], "negativemax": 142, "negativemaxparamet": 144, "negativeparamet": 144, "nest": 149, "net": [17, 25, 142], "network": [4, 6, 8, 9, 10, 11, 15, 16, 21, 25, 135, 139, 148, 153, 157], "networkx": 154, "new": [4, 6, 7, 8, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 110, 147, 148], "next": [90, 148, 157], "node": [4, 5, 6, 8, 9, 42, 45, 46, 47, 50, 53, 58, 63, 66, 67, 75, 80, 81, 82, 83, 85, 86, 88, 89, 90, 95, 96, 98, 99, 101, 103, 105, 106, 107, 109, 112, 113, 114, 115, 116, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 139, 142, 143, 144, 145, 146, 147, 149, 151, 153, 157], "node_ind": 139, "non": [19, 22, 30, 72, 79, 110, 142, 154], "none": [0, 9, 10, 15, 19, 21, 27, 28, 29, 41, 47, 50, 51, 52, 53, 57, 72, 75, 82, 88, 89, 94, 96, 98, 100, 101, 102, 107, 108, 119, 120, 121, 125, 126, 130, 139, 148], "normal": [13, 25, 146], "normalis": [19, 108], "notat": 155, "note": [10, 11, 13, 17, 19, 22, 23, 26, 27, 42, 46, 47, 49, 80, 89, 101, 113, 114, 116, 130, 141, 145, 154], "notebook": [132, 153], "np": [2, 35, 57, 64, 72, 142, 149], "nstep": [8, 19, 22], "nt": 30, "null": 139, "nullsolv": 139, "num_input": [25, 155], "num_output": [25, 155], "num_pdf": [100, 108], "num_scenario": 149, "number": [0, 1, 3, 8, 9, 13, 14, 18, 19, 22, 23, 25, 45, 72, 75, 76, 78, 79, 83, 88, 93, 94, 100, 108, 121, 127, 141, 149, 155], "numer": [44, 123, 145], "numpi": [40, 92, 98, 99, 123, 124, 132, 142, 154], "numpyarraynodecurtailmentratiorecord": [114, 115, 116], "numpyarraynodedeficitrecord": [113, 115, 116], "numpyarraynoderecord": [42, 113, 114, 116, 157], "numpyarraynodesuppliedratiorecord": [113, 114, 115], "numpyarraynormalisedstoragerecord": 108, "numpyarraystoragerecord": 100, "o": [126, 153], "obj": 155, "object": [0, 1, 5, 8, 9, 10, 11, 13, 14, 17, 19, 20, 22, 57, 72, 76, 78, 82, 86, 88, 89, 91, 96, 126, 136, 139, 145, 151, 155], "obtain": [65, 66, 67, 68, 145], "occur": [23, 47, 147, 157], "octob": 24, "offset": [35, 41, 64, 82], "often": [88, 90, 143, 145, 146, 155], "ok": 146, "older": 153, "onc": [27, 94, 145, 146, 149, 155], "one": [0, 6, 8, 9, 19, 24, 27, 28, 29, 38, 39, 44, 63, 70, 72, 73, 81, 83, 89, 92, 94, 110, 113, 142, 143, 145, 146, 148, 154, 155], "onli": [0, 2, 3, 6, 13, 14, 23, 24, 25, 45, 80, 92, 94, 139, 142, 145, 146, 149, 154, 155], "open": [82, 126, 145], "open_fil": 126, "oper": [24, 95, 103, 115, 129, 142, 143], "optimis": [0, 34, 54, 57, 64, 72, 74, 100, 108, 110, 120, 132, 142, 153], "option": [0, 6, 15, 16, 19, 21, 23, 25, 26, 41, 57, 72, 75, 80, 82, 86, 88, 89, 91, 92, 94, 95, 98, 99, 100, 104, 108, 119, 121, 123, 124, 126, 131, 147, 149, 154, 156], "order": [89, 98, 143, 145, 146, 149, 155, 157], "ordin": 38, "org": [154, 156], "orient": 151, "origin": 142, "other": [7, 9, 10, 11, 19, 20, 25, 27, 42, 46, 80, 91, 120, 132, 141, 142, 144, 147, 148, 151, 155], "other_model": [65, 66, 67, 68], "otherwis": [3, 27, 57, 72, 94, 105, 149, 155], "our": 157, "out": [23, 41, 82, 148], "out_1": 148, "out_edg": 139, "outflow": [26, 148], "outfrom": [23, 26], "output": [13, 14, 17, 22, 25, 34, 94, 95, 126, 141, 142, 145, 146, 147, 148, 155, 157], "over": [1, 23, 52, 76, 78, 91, 92, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "overal": 155, "overload": 149, "overrid": 4, "overview": 153, "own": 151, "oxford": 145, "oxford_demand": 145, "p": [47, 101, 130, 146], "packag": [96, 153], "pair": [85, 90, 155], "panda": [3, 41, 145, 154, 157], "paper": 156, "parallel": 148, "param": [49, 70, 93, 102, 104, 110, 111, 117, 119, 122, 131, 146], "paramet": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 91, 92, 94, 95, 96, 98, 99, 100, 101, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 151, 153], "parameter_data": 149, "parameteris": 143, "parent": [148, 149], "pars": [145, 155], "parse_d": [145, 155], "part": [9, 79, 149], "parti": 157, "particular": [19, 47, 105, 156], "particularli": 145, "pass": [19, 50, 52, 53, 88, 89, 90, 96, 126, 145, 148, 149, 154, 155], "past": 46, "path": [82, 96, 126, 154, 155], "pattern": 142, "pdf": [100, 108, 146], "penalis": 25, "penultim": 72, "per": [1, 8, 9, 32, 47, 76, 77, 78, 91, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 130, 149], "percentag": [5, 86, 89], "percentil": [92, 98, 99, 123, 124, 142], "percentileofscor": 92, "perfect": 83, "perform": [30, 91, 92, 139, 140, 153], "perhap": 146, "period": [3, 14, 18, 23, 24, 30, 94, 155], "permiss": 156, "perturb": 32, "phase": 30, "phi_n": 30, "pi": 30, "piec": [19, 22], "piecewis": [57, 71], "piecewiselink": [19, 148], "pip": 153, "pipe": [16, 148], "place": [13, 154], "plan": 154, "platypu": 132, "pleas": [72, 92, 156], "plu": 145, "png": 146, "point": [15, 21, 23, 50, 52, 53, 100, 108], "poor": 146, "pop": [148, 149], "popul": 145, "posit": [5, 23, 25, 26, 27, 30, 34, 41, 72, 74, 82, 89, 90, 98, 142], "possibl": [1, 146, 147, 149, 154, 155], "possibli": 141, "potenti": 151, "pow": 149, "power": [101, 130, 132], "practic": [145, 149], "prebuilt": 154, "preced": 1, "predefin": 89, "predic": 27, "prefer": [126, 155], "present": [22, 145], "previou": [23, 27, 46, 50, 58, 63, 75, 121, 145, 149], "previous": 145, "print": [145, 155, 157], "prior": [14, 19, 23, 45, 100, 108, 147], "probabl": [100, 108], "problem": [120, 139, 149, 153, 155, 157], "problemat": 145, "proce": 140, "proceed": 154, "process": [140, 145, 147], "produc": [91, 100, 108, 145], "product": [1, 28, 29, 47, 92, 101, 130, 144, 146], "profil": [40, 57, 72, 76, 77, 78, 83, 84, 85, 110, 132, 142, 143, 146, 149, 155], "program": [154, 156], "programm": [139, 147, 148, 149, 152], "programmat": 155, "progress": 143, "project": [151, 154], "properti": [23, 26, 94, 95, 120, 136, 139, 148, 155, 157], "proport": [9, 17, 19, 23, 25, 26, 80, 100, 118], "proportion": 148, "provid": [1, 5, 14, 19, 20, 25, 40, 46, 48, 50, 53, 57, 75, 76, 77, 78, 80, 83, 91, 92, 94, 95, 98, 103, 104, 115, 120, 126, 129, 131, 143, 148, 149, 151, 154, 155], "public": [146, 156], "publish": 156, "pull": [151, 154], "purpos": [139, 149, 156], "py": [149, 154, 155], "pygmo": 132, "pygmowrapp": 136, "pypi": 154, "pytabl": [82, 145, 154], "pytest": 154, "python": [96, 139, 142, 145, 146, 147, 149, 151, 153, 154, 155, 156], "python3": 155, "pywr": [135, 137, 138, 143, 145, 146, 147, 152, 155, 156, 157], "pywr_model_json": 136, "pywr_solv": 154, "pywr_solver_glpk_unsafe_api": 147, "pyx": 149, "pyximport": 149, "q": [47, 101, 130], "quadratur": 52, "queri": [86, 89, 149], "quicker": 142, "quit": 155, "quot": 155, "radial": 72, "rainfal": 145, "rais": [140, 145, 147, 148, 149, 155], "ramp": 74, "random": 147, "rang": [19, 34, 54, 74, 89, 94, 98, 99, 123, 124], "rank": 92, "ratchet": 27, "rate": [22, 43, 47, 54, 101, 130, 148], "rather": [130, 145, 146, 154], "ratio": [8, 9, 19, 113, 116, 144, 148], "raw_decod": 155, "rb": 145, "rbf": 72, "rbf_kwarg": 72, "rbfprofileparamet": 110, "re": [140, 145, 146, 147], "reach": [23, 26, 140, 147], "read": [2, 3, 82, 145, 149], "read_excel": 145, "read_xxx": 145, "readabl": 142, "readi": 157, "real": [145, 147], "realloc": 149, "reason": 22, "receiv": [148, 156, 157], "recent": 155, "recip": 154, "recognis": 145, "recommend": [145, 147, 154], "record": [17, 25, 27, 42, 47, 63, 70, 73, 75, 81, 132, 140, 143, 148, 151, 153, 157], "recorder_agg_func": 91, "recov": 147, "redistribut": 156, "reduc": [13, 83, 146], "reduct": 146, "refer": [2, 3, 8, 9, 19, 72, 92, 126, 141, 142, 143, 145, 149, 153, 155], "referenc": [141, 145, 148, 155], "reflect": [100, 108], "regardless": 141, "regist": [148, 149], "rel": [89, 126, 155], "relat": [88, 146], "releas": [25, 143, 154], "relev": 154, "reli": 86, "reload": 145, "remain": [24, 72, 149], "rememb": 149, "remov": [23, 26, 28, 29, 148, 149, 154, 157], "repeat": [40, 72, 76, 78, 140, 155], "replenish": 23, "repres": [0, 1, 2, 5, 22, 24, 40, 47, 57, 83, 88, 90, 100, 108, 131, 146, 148, 149, 155], "represent": [3, 148], "request": [42, 151, 154], "requir": [8, 9, 19, 23, 25, 26, 47, 82, 92, 100, 108, 139, 141, 142, 145, 148, 149, 154, 155], "resampl": [41, 82, 100, 108, 145], "resample_freq": [100, 108], "resample_func": [100, 108], "reservoir": [25, 88, 142, 143, 146, 149], "reservoira": 155, "reservoirb": 155, "reset": [12, 18, 24, 72, 83, 85, 139, 145], "reset_dai": [12, 24, 83], "reset_month": [12, 24, 83], "reset_to_initial_volum": [12, 18, 24], "residu": [7, 9, 83, 155], "residual_dai": 83, "resolut": [40, 76, 78], "resolv": 149, "resourc": [143, 146, 148, 153, 156], "respect": [17, 23, 25, 26, 72, 88, 120, 141, 146, 147, 149, 154], "respond": 143, "rest": [146, 148], "restrict": [1, 142, 144, 153], "result": [13, 91, 92, 94, 110, 138, 140, 141, 147, 149, 157], "retry_solv": 139, "return": [0, 5, 10, 11, 27, 30, 34, 38, 39, 41, 43, 45, 46, 47, 49, 54, 57, 58, 59, 63, 64, 70, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 87, 88, 89, 90, 91, 97, 98, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 130, 131, 136, 142, 146, 148, 149, 155], "revis": 145, "rewrit": 149, "rho": [47, 101, 130], "right": 71, "river": [134, 148, 155], "rivergaug": 155, "riversplit": 9, "rm": 154, "roll": 23, "rollingmeanflownodeparamet": 121, "root": 126, "rout": [7, 8, 9, 13, 22, 126, 139], "route_flows_arr": 139, "routes_flow": 126, "routes_flows_arrai": 139, "routin": 139, "row": [126, 139], "rpath": 154, "rule": [143, 148], "run": [0, 1, 18, 23, 27, 82, 101, 127, 130, 136, 138, 140, 145, 149, 154, 155, 157], "run_model": 149, "runtim": [147, 149, 154], "said": [143, 149], "same": [4, 22, 30, 33, 36, 37, 57, 72, 77, 89, 91, 98, 120, 142, 149], "satisfi": [140, 141, 157], "save": [49, 96, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 126, 130, 145, 148], "save_routes_flow": 139, "scalar": 155, "scale": [35, 95, 103, 104, 115, 129, 131], "scan_onc": 155, "scenario": [1, 2, 3, 14, 31, 32, 33, 36, 37, 41, 45, 76, 77, 78, 79, 82, 91, 92, 94, 95, 96, 98, 99, 100, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 126, 127, 130, 132, 143, 157], "scenario_index": [27, 96, 149], "scenariocollect": [0, 2, 132], "scenarioindex": [0, 1, 3, 132, 149], "scenariomonthlyprofileparamet": 57, "scheme": 141, "scipi": [50, 52, 53, 72, 92, 154], "scope": 149, "score": 92, "script": [145, 154], "sdc_agg_func": 124, "search": [132, 155], "season": 123, "second": [72, 76, 78, 82, 89, 90, 126], "section": [142, 143, 145, 146, 151, 155, 156, 157], "see": [12, 16, 23, 26, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 143, 145, 149, 154, 155, 156, 157], "seen": 154, "segment": 147, "select": 79, "self": [89, 113, 114, 116, 139, 148, 149, 155], "sensibl": 147, "sensit": 155, "sent": 17, "separ": [22, 57, 126, 145], "septemb": 24, "sequenc": 89, "seri": [30, 41, 100, 108], "servic": 154, "set": [1, 14, 17, 23, 25, 28, 29, 47, 120, 139, 148, 149, 154, 157], "set_fixed_costs_onc": 139, "set_fixed_factors_onc": 139, "set_fixed_flows_onc": 139, "set_solver_opt": 139, "setup": [139, 142, 145, 154], "sever": [22, 110, 139, 146, 148, 154], "sh": 154, "sha256": 145, "shape": [32, 94, 95], "share": 146, "shift": [30, 72], "shorter": 142, "should": [1, 10, 11, 16, 20, 33, 36, 37, 47, 57, 71, 72, 76, 78, 85, 88, 89, 90, 92, 101, 123, 130, 139, 142, 143, 145, 147, 154, 155, 156], "show": [145, 149], "shown": [142, 145, 147], "signatur": 149, "signific": 149, "similar": [0, 92, 126, 154], "simpl": [5, 8, 15, 21, 132, 148, 155], "simple_data": 145, "simplest": 157, "simpli": [47, 101, 130], "simplifi": 149, "simplist": 149, "simul": [2, 3, 79, 100, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 131, 140, 143, 147, 156], "simultan": [0, 94], "sinc": 147, "singl": [33, 36, 37, 55, 56, 64, 79, 86, 100, 108, 141, 142], "situat": [13, 22, 24], "size": [0, 32, 33, 36, 37, 79, 126], "sjon": 148, "skip": 3, "slice": [0, 1, 126], "slightli": [3, 148], "slot": [8, 9, 19, 155], "slot_nam": [8, 9, 19, 148], "small": [0, 30], "smith": 155, "snippet": 146, "snorf": 155, "so": [22, 89, 90, 127, 146, 148, 149, 154, 157], "soft": 155, "softwar": 153, "solut": [136, 140, 141, 154], "solv": [13, 139, 148, 149, 152, 154], "solver": [19, 42, 132, 147, 153, 154], "some": [0, 120, 126, 135, 142, 143, 146, 151, 155, 157], "sometim": [141, 155], "somewhat": 155, "sourc": [141, 145, 146, 153], "sourceforg": 154, "space": 155, "special": [141, 148, 154], "specialis": [8, 151], "specif": [1, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 141, 146, 149, 151, 154, 155], "specifi": [4, 14, 17, 23, 24, 25, 26, 45, 88, 89, 94, 100, 108, 123, 141, 145, 146, 154, 155], "speed": 145, "split": [8, 9, 19], "squaredparamet": 149, "stai": 27, "standard": [96, 154], "start": [18, 24, 71, 89, 94, 126, 149, 154, 155, 157], "stat": 139, "state": [27, 143, 146], "statement": 149, "static": 154, "station": 7, "statist": [126, 132], "stdin": 155, "steep": 54, "step": [3, 19, 22, 23, 25, 26, 46, 47, 50, 57, 91, 105, 109, 111, 112, 113, 114, 115, 116, 117, 118, 126, 131, 139, 148], "still": [145, 154, 157], "stop": 24, "storag": [5, 11, 12, 13, 18, 23, 24, 26, 53, 67, 80, 81, 85, 86, 87, 88, 89, 90, 100, 105, 106, 108, 109, 112, 118, 124, 144, 146, 148], "storage_nod": [11, 80, 86, 87, 88, 89, 90, 146], "storageinput": 20, "store": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 138, 145, 148, 149], "str": [0, 10, 11, 17, 23, 25, 26, 28, 29, 57, 75, 91, 92, 94, 95, 96, 98, 99, 100, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 131], "strateg": 146, "strategi": 143, "street": 156, "strict": 155, "strictli": 120, "string": [8, 9, 13, 14, 17, 19, 20, 22, 27, 57, 82, 92, 126, 145, 155], "structur": [22, 148, 149, 151, 153], "style": [98, 99, 123, 124], "sub": [22, 25, 92, 148, 151], "subclass": [5, 137, 138, 139, 148], "subject": 152, "sublink": [19, 22], "submodul": 132, "subsampl": 145, "subsequ": 83, "subset": [0, 89], "subtyp": 155, "successfulli": 154, "sudo": 154, "suffici": [145, 148, 155], "suitabl": 145, "sum": [10, 11, 28, 29, 91, 92, 131, 141, 144, 149], "sum_": 30, "summat": 131, "summer": 146, "sumparamet": 149, "super": [148, 149], "superior": 145, "suppli": [4, 16, 22, 25, 92, 94, 116, 146, 148, 152, 155, 157], "supply_ratio": 116, "support": [79, 92, 98, 99, 123, 124, 144], "sure": 148, "switch": [79, 80, 146], "syntax": 153, "system": [143, 145, 146, 148], "t": [30, 148, 149, 152, 157], "tabl": [82, 126, 144], "tablesarrayparamet": 145, "tabular": 145, "take": [1, 41, 55, 56, 60, 61, 62, 82, 91], "taken": [32, 154], "target": [47, 83, 98, 100], "target_volume_pc": 100, "tbc": [143, 150], "technic": 157, "teddington": 155, "tell": 157, "temporal_agg_func": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "term": [23, 25, 26, 147, 156], "termin": 140, "terminologi": 149, "test": [79, 147, 153, 155], "text": [152, 156], "thame": 155, "than": [3, 8, 9, 17, 19, 23, 47, 71, 84, 89, 93, 105, 120, 140, 141, 145, 146, 149, 154, 155, 157], "thei": [25, 88, 90, 120, 142, 143, 147], "them": [2, 148], "theme": 145, "therefor": [32, 82, 92, 100, 108, 145, 146], "thereof": [89, 126, 148], "thi": [0, 1, 2, 3, 6, 8, 9, 10, 11, 14, 16, 17, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 40, 41, 42, 45, 46, 47, 49, 55, 56, 57, 64, 71, 72, 75, 76, 78, 79, 80, 82, 83, 85, 89, 91, 92, 94, 96, 98, 99, 100, 101, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 126, 127, 130, 131, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157], "those": [47, 72], "though": [46, 80, 85], "three": [88, 141, 142, 145, 146, 148, 155], "threshold": [27, 55, 56, 58, 59, 60, 61, 73, 93, 94, 105, 127, 132, 142], "through": [17, 19, 25, 66, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 143, 148, 157], "throughout": 146, "time": [3, 23, 25, 26, 31, 32, 33, 36, 37, 46, 47, 50, 57, 92, 94, 100, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 131, 139, 141, 145, 146, 147, 148, 149, 155], "time_limit": 139, "timedelta": 157, "timeseri": [32, 41, 109, 111, 112, 113, 114, 115, 116, 117, 118, 130, 142], "timeseries2": 145, "timestamp": 145, "timestep": [4, 5, 14, 23, 27, 31, 32, 38, 39, 41, 42, 45, 46, 75, 80, 82, 94, 97, 101, 121, 122, 126, 127, 132, 143, 145, 146, 148, 152, 155, 157], "timestep_offset": [41, 82], "timestepp": [149, 153, 157], "titl": [155, 157], "to_datafram": [100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "to_datetim": 157, "to_hdf": 145, "todo": [23, 26], "tomlinson": 156, "too": 149, "tool": 120, "top": [90, 146], "total": [10, 11, 19, 40, 47, 91, 95, 101, 103, 115, 128, 129, 130, 131, 141, 149], "total_valu": 149, "total_volum": 149, "totalhydroenergyrecord": [47, 101], "traceback": 155, "track": [42, 46, 80, 104, 119, 131, 145], "trail": 155, "transform": [47, 101, 130], "translat": [147, 155], "travers": 22, "travi": 154, "treatment": 148, "tree": 149, "trigger": [27, 154], "trivial": 157, "true": [3, 27, 89, 100, 108, 126, 140, 145, 147, 148, 155], "truthi": 142, "try": 155, "tupl": 126, "turbin": [47, 101, 130], "turbine_elev": [47, 101, 130], "tutori": [149, 153], "twice": 155, "two": [27, 38, 39, 63, 70, 71, 73, 81, 90, 92, 141, 142, 145, 146, 147, 148, 149, 155, 157], "type": [20, 79, 85, 89, 141, 142, 145, 146, 148, 149, 151, 155, 157], "typic": [0, 5, 143, 148], "unabl": 149, "unaggreg": 91, "unchang": 24, "uncheck": 147, "unconstrain": [7, 9, 19], "under": 156, "underli": 9, "underneath": 126, "understand": 146, "undertak": 91, "undertaken": [57, 72, 120, 140], "unicod": [94, 95], "uniformli": 83, "unintend": 141, "uniqu": [8, 9, 13, 14, 17, 19, 20, 22], "unit": [26, 47, 101, 130, 154], "univers": 156, "unlik": [2, 92, 148], "until": [23, 90, 140], "unusu": 42, "up": [23, 41, 82, 142, 154], "updat": [23, 143, 145, 149], "upper": [47, 52, 54, 57, 64, 72, 74, 90, 98, 100, 108, 120, 140], "upper_bound": [34, 35, 54, 57, 64, 72, 74, 89], "upper_paramet": 52, "upper_target_fdc": 98, "upstream": [6, 148], "url": [145, 155], "us": [0, 1, 2, 12, 13, 14, 16, 17, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 41, 42, 43, 44, 46, 47, 49, 50, 52, 53, 54, 57, 64, 72, 75, 79, 80, 82, 83, 85, 86, 88, 89, 90, 91, 92, 94, 96, 98, 99, 100, 101, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 126, 130, 131, 135, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 151, 154, 155, 156, 157], "usa": 156, "usag": 144, "use_max_flow": [58, 59], "use_presolv": 139, "use_proportional_volum": 80, "use_reflect": [100, 108], "use_unsafe_api": [139, 147], "usefulli": 155, "user": [0, 1, 2, 5, 19, 72, 92, 100, 108, 126, 134, 145, 147, 149, 151, 155], "usr": 154, "usual": [145, 146, 149], "util": [92, 132, 153], "utilis": [23, 79, 83], "v1": 147, "val": 139, "valid": [14, 23, 34, 45, 54, 74, 145, 157], "valu": [0, 4, 12, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 96, 98, 99, 101, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 130, 131, 140, 142, 144, 145, 146, 147, 148, 149, 155], "valueerror": [140, 155], "vari": [0, 31, 32, 33, 36, 37, 79, 140, 141, 143, 146, 148, 149, 155], "variabl": [34, 54, 72, 74, 89, 136, 147, 154], "variable_days_of_year_rang": 72, "variable_indic": 89, "ve": 157, "veri": [143, 145, 147, 149, 157], "version": [8, 23, 55, 56, 64, 145, 149, 153, 154, 156], "via": [7, 9, 13, 100, 108, 141, 142, 145, 147, 149, 151], "view": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 139], "virtual": [12, 18, 23, 24, 26], "virtualstorag": 12, "visualis": 135, "volum": [11, 12, 13, 18, 23, 24, 25, 26, 53, 80, 81, 83, 85, 86, 88, 89, 100, 105, 106, 108, 118, 143, 146, 148, 149, 155], "w": 126, "wa": [23, 42, 46, 80, 142, 145, 154], "wai": [89, 143, 145, 148, 149, 154], "want": 154, "warn": 145, "warrant": 142, "warranti": 156, "water": [4, 23, 26, 47, 101, 130, 141, 146, 148, 156], "water_elev": [47, 101, 130], "water_elevation_paramet": [47, 101, 130], "we": [143, 148, 157], "websit": 154, "week": [3, 84, 145], "week_index": 3, "weekli": [78, 84, 145], "weight": 85, "well": 155, "wet": 155, "wheel": 153, "when": [5, 8, 9, 17, 18, 19, 22, 24, 34, 54, 57, 64, 72, 74, 89, 91, 92, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 126, 127, 140, 141, 142, 143, 145, 146, 149, 154, 155, 156], "whenev": 149, "where": [8, 9, 22, 23, 42, 47, 55, 56, 64, 82, 93, 94, 105, 126, 141, 145, 146, 148, 155], "wherea": 155, "whether": [17, 100, 105, 108, 118, 120, 131, 142], "which": [1, 10, 11, 12, 17, 18, 19, 20, 25, 28, 29, 30, 32, 49, 52, 57, 72, 76, 78, 79, 83, 87, 89, 92, 94, 96, 98, 100, 108, 139, 142, 143, 145, 147, 148, 149, 154, 155, 157], "while": [142, 149, 157], "white": 155, "whole": [19, 84], "window": [122, 153], "winglpk": 154, "winter": 146, "wise": [19, 22], "within": [10, 11, 24, 33, 36, 37, 94, 126, 143, 147, 157], "without": [147, 148, 149, 156], "wl": 154, "word": 149, "work": [47, 101, 130, 141, 145, 146, 149, 154, 155], "world": 147, "would": [17, 141, 147, 148], "wrapper": [120, 139], "write": [149, 151, 155, 156], "writer": 96, "written": [149, 153, 154], "x": [13, 50, 51, 52, 53, 71, 142, 149, 152, 153], "x0": [9, 19], "x1": [9, 19], "x2": [9, 19], "x_i": 13, "x_o": 13, "xi": [9, 19], "xl": 145, "xlrd": 154, "xlsx": 145, "xo": [9, 19], "y": [50, 51, 52, 53, 71, 149], "yaml": 155, "year": [3, 12, 18, 24, 30, 39, 43, 72, 83, 84, 93, 94, 95, 110, 126, 143, 146, 155], "yesterdai": 42, "yet": 155, "yield": 148, "you": [42, 145, 149, 151, 154, 156], "your": [151, 154, 156], "yourself": 154, "zero": [3, 13, 17, 19, 22, 42, 47, 52, 71, 72, 83, 89, 98, 105, 108, 113, 116, 142, 147, 148, 149, 157], "zeroth": [27, 30, 42]}, "titles": ["pywr.core.Scenario", "pywr.core.ScenarioCollection", "pywr.core.ScenarioIndex", "pywr.core.Timestep", "pywr.domains.river.Catchment", "pywr.domains.river.Reservoir", "pywr.domains.river.River", "pywr.domains.river.RiverGauge", "pywr.domains.river.RiverSplit", "pywr.domains.river.RiverSplitWithGauge", "pywr.nodes.AggregatedNode", "pywr.nodes.AggregatedStorage", "pywr.nodes.AnnualVirtualStorage", "pywr.nodes.BreakLink", "pywr.nodes.DelayNode", "pywr.nodes.Input", "pywr.nodes.Link", "pywr.nodes.LossLink", "pywr.nodes.MonthlyVirtualStorage", "pywr.nodes.MultiSplitLink", "pywr.nodes.Node", "pywr.nodes.Output", "pywr.nodes.PiecewiseLink", "pywr.nodes.RollingVirtualStorage", "pywr.nodes.SeasonalVirtualStorage", "pywr.nodes.Storage", "pywr.nodes.VirtualStorage", "pywr.parameters.AbstractThresholdParameter", "pywr.parameters.AggregatedIndexParameter", "pywr.parameters.AggregatedParameter", "pywr.parameters.AnnualHarmonicSeriesParameter", "pywr.parameters.ArrayIndexedParameter", "pywr.parameters.ArrayIndexedScenarioMonthlyFactorsParameter", "pywr.parameters.ArrayIndexedScenarioParameter", "pywr.parameters.BinaryStepParameter", "pywr.parameters.ConstantParameter", "pywr.parameters.ConstantScenarioIndexParameter", "pywr.parameters.ConstantScenarioParameter", "pywr.parameters.CurrentOrdinalDayThresholdParameter", "pywr.parameters.CurrentYearThresholdParameter", "pywr.parameters.DailyProfileParameter", "pywr.parameters.DataFrameParameter", "pywr.parameters.DeficitParameter", "pywr.parameters.DiscountFactorParameter", "pywr.parameters.DivisionParameter", "pywr.parameters.FlowDelayParameter", "pywr.parameters.FlowParameter", "pywr.parameters.HydropowerTargetParameter", "pywr.parameters.IndexParameter", "pywr.parameters.IndexedArrayParameter", "pywr.parameters.InterpolatedFlowParameter", "pywr.parameters.InterpolatedParameter", "pywr.parameters.InterpolatedQuadratureParameter", "pywr.parameters.InterpolatedVolumeParameter", "pywr.parameters.LogisticParameter", "pywr.parameters.MaxParameter", "pywr.parameters.MinParameter", "pywr.parameters.MonthlyProfileParameter", "pywr.parameters.MultipleThresholdIndexParameter", "pywr.parameters.MultipleThresholdParameterIndexParameter", "pywr.parameters.NegativeMaxParameter", "pywr.parameters.NegativeMinParameter", "pywr.parameters.NegativeParameter", "pywr.parameters.NodeThresholdParameter", "pywr.parameters.OffsetParameter", "pywr.parameters.OtherModelIndexParameterValueIndexParameter", "pywr.parameters.OtherModelNodeFlowParameter", "pywr.parameters.OtherModelNodeStorageParameter", "pywr.parameters.OtherModelParameterValueParameter", "pywr.parameters.Parameter", "pywr.parameters.ParameterThresholdParameter", "pywr.parameters.PiecewiseIntegralParameter", "pywr.parameters.RbfProfileParameter", "pywr.parameters.RecorderThresholdParameter", "pywr.parameters.RectifierParameter", "pywr.parameters.RollingMeanFlowNodeParameter", "pywr.parameters.ScenarioDailyProfileParameter", "pywr.parameters.ScenarioMonthlyProfileParameter", "pywr.parameters.ScenarioWeeklyProfileParameter", "pywr.parameters.ScenarioWrapperParameter", "pywr.parameters.StorageParameter", "pywr.parameters.StorageThresholdParameter", "pywr.parameters.TablesArrayParameter", "pywr.parameters.UniformDrawdownProfileParameter", "pywr.parameters.WeeklyProfileParameter", "pywr.parameters.WeightedAverageProfileParameter", "pywr.parameters.control_curves.BaseControlCurveParameter", "pywr.parameters.control_curves.ControlCurveIndexParameter", "pywr.parameters.control_curves.ControlCurveInterpolatedParameter", "pywr.parameters.control_curves.ControlCurveParameter", "pywr.parameters.control_curves.ControlCurvePiecewiseInterpolatedParameter", "pywr.recorders.AggregatedRecorder", "pywr.recorders.Aggregator", "pywr.recorders.AnnualCountIndexParameterRecorder", "pywr.recorders.AnnualCountIndexThresholdRecorder", "pywr.recorders.AnnualTotalFlowRecorder", "pywr.recorders.CSVRecorder", "pywr.recorders.DeficitFrequencyNodeRecorder", "pywr.recorders.FlowDurationCurveDeviationRecorder", "pywr.recorders.FlowDurationCurveRecorder", "pywr.recorders.GaussianKDEStorageRecorder", "pywr.recorders.HydropowerRecorder", "pywr.recorders.IndexParameterRecorder", "pywr.recorders.MeanFlowNodeRecorder", "pywr.recorders.MeanParameterRecorder", "pywr.recorders.MinimumThresholdVolumeStorageRecorder", "pywr.recorders.MinimumVolumeStorageRecorder", "pywr.recorders.NodeRecorder", "pywr.recorders.NormalisedGaussianKDEStorageRecorder", "pywr.recorders.NumpyArrayAreaRecorder", "pywr.recorders.NumpyArrayDailyProfileParameterRecorder", "pywr.recorders.NumpyArrayIndexParameterRecorder", "pywr.recorders.NumpyArrayLevelRecorder", "pywr.recorders.NumpyArrayNodeCurtailmentRatioRecorder", "pywr.recorders.NumpyArrayNodeDeficitRecorder", "pywr.recorders.NumpyArrayNodeRecorder", "pywr.recorders.NumpyArrayNodeSuppliedRatioRecorder", "pywr.recorders.NumpyArrayParameterRecorder", "pywr.recorders.NumpyArrayStorageRecorder", "pywr.recorders.ParameterRecorder", "pywr.recorders.Recorder", "pywr.recorders.RollingMeanFlowNodeRecorder", "pywr.recorders.RollingWindowParameterRecorder", "pywr.recorders.SeasonalFlowDurationCurveRecorder", "pywr.recorders.StorageDurationCurveRecorder", "pywr.recorders.StorageRecorder", "pywr.recorders.TablesRecorder", "pywr.recorders.TimestepCountIndexParameterRecorder", "pywr.recorders.TotalDeficitNodeRecorder", "pywr.recorders.TotalFlowNodeRecorder", "pywr.recorders.TotalHydroEnergyRecorder", "pywr.recorders.TotalParameterRecorder", "Pywr reference documentation.", "Core classes", "Nodes", "Notebook Utilities", "Optimisation", "Parameters", "Recorders", "Solvers", "Utilities", "Aggregated nodes", "Aggregated parameters", "Dynamic behaviour and control curves", "Pywr cookbook examples", "Using external data", "Demand restrictions", "GLPK error handling and performance", "Extending Pywr with custom Nodes", "Extending Pywr with custom Parameters", "Extending Pywr with custom Recorders", "Extending Pywr", "Problem formulation", "Welcome to Pywr\u2019s documentation!", "Installing Pywr", "JSON model format", "License", "Tutorial"], "titleterms": {"": 153, "1": 147, "17": 147, "A": [149, 157], "abov": 147, "abstractthresholdparamet": 27, "activ": 137, "addit": 141, "after": 149, "aggreg": [92, 141, 142], "aggregatedindexparamet": 28, "aggregatednod": 10, "aggregatedparamet": 29, "aggregatedrecord": 91, "aggregatedstorag": 11, "all": 142, "anaconda": 154, "ani": 142, "annual": 137, "annualcountindexparameterrecord": 93, "annualcountindexthresholdrecord": 94, "annualharmonicseriesparamet": 30, "annualtotalflowrecord": 95, "annualvirtualstorag": 12, "arrai": [137, 138], "arrayindexedparamet": 31, "arrayindexedscenariomonthlyfactorsparamet": 32, "arrayindexedscenarioparamet": 33, "base": [137, 138], "basecontrolcurveparamet": 86, "basic": [142, 143], "befor": 149, "behaviour": 143, "binari": 154, "binarystepparamet": 34, "bisect": 140, "breaklink": 13, "catchment": 4, "checksum": 145, "citat": 156, "class": [133, 134, 137, 138], "combin": 137, "concept": 143, "constant": 145, "constantparamet": 35, "constantscenarioindexparamet": 36, "constantscenarioparamet": 37, "constrain": 141, "content": [136, 139], "continu": 154, "control": [137, 143], "control_curv": [86, 87, 88, 89, 90], "controlcurveindexparamet": 87, "controlcurveinterpolatedparamet": 88, "controlcurveparamet": 89, "controlcurvepiecewiseinterpolatedparamet": 90, "cookbook": 144, "core": [0, 1, 2, 3, 133], "coupl": 137, "csv": 145, "csvrecord": 96, "currentordinaldaythresholdparamet": 38, "currentyearthresholdparamet": 39, "curv": [137, 138, 143], "custom": [142, 143, 148, 149, 150], "cython": 149, "cython_glpk": 139, "cython_lpsolv": 139, "dailyprofileparamet": 40, "data": 145, "datafram": 137, "dataframeparamet": 41, "debug": 155, "deficit": 138, "deficitfrequencynoderecord": 97, "deficitparamet": 42, "delaynod": 14, "demand": [145, 146], "demands_monthli": 145, "depend": [143, 149, 154], "develop": 154, "discountfactorparamet": 43, "divisionparamet": 44, "document": [132, 153, 155, 156], "domain": [4, 5, 6, 7, 8, 9], "durat": 138, "dynam": 143, "edg": 155, "error": [147, 155], "exampl": [144, 145, 157], "extend": [148, 149, 150, 151], "extern": 145, "file": 138, "flow": [138, 141], "flowdelayparamet": 45, "flowdurationcurvedeviationrecord": 98, "flowdurationcurverecord": 99, "flowparamet": 46, "footnot": 155, "format": [145, 155], "formul": 152, "from": 154, "function": [137, 142], "gaussiankdestoragerecord": 100, "gener": 154, "glpk": 147, "handl": 147, "hdf5": 137, "hydro": 138, "hydropow": 137, "hydropowerrecord": 101, "hydropowertargetparamet": 47, "improv": 149, "index": [138, 145], "indexedarrayparamet": 49, "indexparamet": 48, "indexparameterrecord": 102, "inform": 141, "input": 15, "instal": 154, "integr": 154, "interpol": 137, "interpolatedflowparamet": 50, "interpolatedparamet": 51, "interpolatedquadratureparamet": 52, "interpolatedvolumeparamet": 53, "json": 155, "licens": 156, "link": 16, "linux": 154, "load": 155, "logisticparamet": 54, "losslink": 17, "max": 142, "maximum": 141, "maxparamet": [55, 142], "mean": 142, "meanflownoderecord": 103, "meanparameterrecord": 104, "median": 142, "metadata": 155, "min": 142, "minim": 157, "minimumthresholdvolumestoragerecord": 105, "minimumvolumestoragerecord": 106, "minparamet": [56, 142], "model": [137, 155], "modul": [136, 139], "monthli": 145, "monthlyprofileparamet": 57, "monthlyvirtualstorag": 18, "multi": [137, 145], "multiindex_data": 145, "multipl": 137, "multiplethresholdindexparamet": 58, "multiplethresholdparameterindexparamet": 59, "multisplitlink": 19, "negativemaxparamet": [60, 142], "negativeminparamet": 61, "negativeparamet": [62, 142], "node": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 134, 141, 148, 155], "noderecord": 107, "nodethresholdparamet": 63, "non": 155, "normalisedgaussiankdestoragerecord": 108, "notebook": 135, "numpi": 138, "numpyarrayarearecord": 109, "numpyarraydailyprofileparameterrecord": 110, "numpyarrayindexparameterrecord": 111, "numpyarraylevelrecord": 112, "numpyarraynodecurtailmentratiorecord": 113, "numpyarraynodedeficitrecord": 114, "numpyarraynoderecord": 115, "numpyarraynodesuppliedratiorecord": 116, "numpyarrayparameterrecord": 117, "numpyarraystoragerecord": 118, "o": 154, "offsetparamet": 64, "older": 147, "optimis": 136, "other": [137, 143, 149], "othermodelindexparametervalueindexparamet": 65, "othermodelnodeflowparamet": 66, "othermodelnodestorageparamet": 67, "othermodelparametervalueparamet": 68, "output": 21, "overview": 155, "packag": 154, "paramet": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 137, 142, 149, 155], "parameterrecord": 119, "parameterthresholdparamet": 70, "perform": [147, 149], "piecewiseintegralparamet": 71, "piecewiselink": 22, "pip": 154, "platypu": 136, "power": 138, "problem": 152, "product": 142, "profil": [137, 145], "pygmo": 136, "pywr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 139, 140, 144, 148, 149, 150, 151, 153, 154], "ratio": 141, "rbfprofileparamet": 72, "record": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 150], "recorderthresholdparamet": 73, "rectifierparamet": 74, "refer": 132, "reservoir": 5, "reset": 149, "restrict": 146, "river": [4, 5, 6, 7, 8, 9], "rivergaug": 7, "riversplit": 8, "riversplitwithgaug": 9, "rollingmeanflownodeparamet": 75, "rollingmeanflownoderecord": 121, "rollingvirtualstorag": 23, "rollingwindowparameterrecord": 122, "scenario": [0, 149], "scenariocollect": 1, "scenariodailyprofileparamet": 76, "scenarioindex": 2, "scenariomonthlyprofileparamet": 77, "scenarioweeklyprofileparamet": 78, "scenariowrapperparamet": 79, "search": 140, "seasonalflowdurationcurverecord": 123, "seasonalvirtualstorag": 24, "setup": 149, "simpl": [137, 149], "softwar": 156, "solver": [139, 155], "sourc": 154, "state": 149, "statist": 138, "storag": [25, 143, 155], "storagedurationcurverecord": 124, "storageparamet": 80, "storagerecord": 125, "storagethresholdparamet": 81, "structur": 155, "submodul": [136, 139], "sum": 142, "support": 145, "syntax": 155, "tabl": 145, "tablesarrayparamet": 82, "tablesrecord": 126, "test": 154, "threshold": 137, "timeseri": 145, "timeseries1": 145, "timestep": [3, 149], "timestepcountindexparameterrecord": 127, "timestepp": 155, "totaldeficitnoderecord": 128, "totalflownoderecord": 129, "totalhydroenergyrecord": 130, "totalparameterrecord": 131, "track": 149, "tutori": 157, "ubuntu": 154, "uniformdrawdownprofileparamet": 83, "us": [141, 145], "usag": 142, "util": [135, 140], "valu": 141, "version": 147, "virtualstorag": 26, "weeklyprofileparamet": 84, "weightedaverageprofileparamet": 85, "welcom": 153, "wheel": 154, "window": 154, "x": 154}})